using DotNet;
using DotNet.AstUtils;

using Nitra;
using Nitra.Declarations;

using System.Collections.Immutable;

namespace Tdl
{
  declaration Suite : NamespaceMember
  {
    symbol
    {
      in Defs       : ImmutableArray[Def];
      in Platform   : PlatformSymbol;
      in Product    : ProductSymbol;
      in Statements : ImmutableArray[SuiteStatement];

      Kind      = "suite";
      SpanClass = TdlLang.SuiteSpanClass;
    }

    out PlatformRef : Ref[PlatformSymbol];
    out ProductRef  : Ref[ProductSymbol];

    Platform.Scope              = Scope;
    PlatformRef                 = Platform.Ref.Resolve();
    Symbol.Platform             = PlatformRef.Symbol;

    Product.Scope               = Scope;
    ProductRef                  = Product.Ref.Resolve();
    Symbol.Product              = ProductRef.Symbol;

    Statements.Scope            = Scope;
    Statements.ScopeIn          = EmptyScope.Instance;
    Symbol.Statements           = Statements.Statement;

    Definitions.DefinitionScope = Statements.ScopeOut;
    Definitions.Scope           = ProjectSupport.ExternalSymbolTable;
    Symbol.Defs                 = TdlUtils.MakeDefinitions(Definitions);

    Platform    : Reference;
    Product     : Reference;
    Definitions : Definition*;
    Statements  : SuiteStatementAst*;
  }
}
