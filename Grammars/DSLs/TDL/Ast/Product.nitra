using DotNet;
using DotNet.AstUtils;

using Nitra;
using Nitra.Declarations;

using System.Collections.Immutable;

namespace Tdl
{
  abstract declaration Product : NamespaceMember
  {
    symbol
    {
    stage 1:
      in Type : ProductTypeSymbol;
      SpanClass = TdlLang.ProductSpanClass;
    }
  stage 1:
    out TypeRef : Ref[ProductTypeSymbol];

    Type.Scope  = Scope;
    TypeRef     = Type.Ref.Resolve();
    Symbol.Type = TypeRef.Symbol;

    Type : Reference;

    | Def
      {
        symbol
        {
          in Defs : ImmutableArray[Def];
          Kind = "product";
        }

        Definitions.DefinitionScope = Symbol.Type.Scope;
        Definitions.Scope           = Scope;
        Symbol.Defs                 = TdlUtils.MakeDefinitions(Definitions);

        Definitions : Definition*;
      }
    | Set
      {
        symbol
        {
          Kind      = "product set";
        }

        Products.Scope = Scope;
        Products : Reference*;
      }
  } // Product
}
