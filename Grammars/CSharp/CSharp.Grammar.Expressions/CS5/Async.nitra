namespace CSharp
{
  syntax module Async
  {
    using Nitra.Core;
    using CSharp.Core;
    using CSharp.CsIdentifiers;
    using CSharp.AnonymousFunction;

    keyword regex ['A'..'Z', 'a'..'z', '_'..'_']+ rule S;

    extend syntax Modifier
    {
      | Async  = "async"sm;
    }

    extend syntax Expression
    {
      | Lambda_SingleParam2    = "async" sm Name                               sm "=>" sm AnonymousFunctionBody;
      | Lambda_ExplicitParams2 = "async" sm ExplicitAnonymousFunctionSignature sm "=>" sm AnonymousFunctionBody;
      | Lambda_ImplicitParams3 = "async" sm ImplicitAnonymousFunctionSignature sm "=>" sm AnonymousFunctionBody;

      | AnonymousFunction2     = "async" sm "delegate"sm ExplicitAnonymousFunctionSignature? nl "{" inl Statement* d "}";

      | Await                  = "await" sm Expression;
    }
  }
}
