using Nemerle;
using Nemerle.Collections;
using Nemerle.Text;
using Nemerle.Utility;

using Nitra;
using Nitra.Declarations;

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Linq;

namespace DotNet
{
  module SC7Utils
  {
    public MakeTupleRef(loc : Location, context : DependentPropertyEvalContext, typeRefs : ImmutableArray[Ref[TypeSymbol]], fields : TupleTypeField.IAstList) : Ref[DeclarationSymbol]
    {
      // TODO: Здесь надо написать код, который создавал бы символы для кортежей.
      // Эти символы должны кэшироваться. Для каждого сочетания полей нужно создавать экземпляр символа.
      // Символы должны наследоваться от соответствующего System.ValueTuple<...> (по количеству полей).
      // Такой символ должен определять (define) именованные поля, которые должны быть пресводнимами
      // к полям из System.ValueTuple<...>.
      // Данная функция должна возвращать ссылку (Ref.Some()) на соответствующий символа описывающий кортеж.
      Ref.CreateUnresolved(loc, "Tuple" + typeRefs.Length)
    }
  }
}
