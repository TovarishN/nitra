namespace CSharp
{
  syntax module Attributes
  {
    using Nitra.Core;

    using CSharp.TokenNames;
    using Literals;
    using CSharp.CsIdentifiers;
    using Core;

    keyword regex ['A'..'Z', 'a'..'z', '_'..'_']+ rule S;

    alias QualifiedName       = QualifiedIdentifier;

    syntax AttributeArguments = "(" ArgumentList ")";
    syntax Attribute          = QualifiedName AttributeArguments?;
    syntax AttributeList      = (Attribute; ","sm; ?)*;

    regex GlobalAttributeTarget = "assembly" | "module";
    syntax GlobalAttributeTargetSpecifier = GlobalAttributeTarget ":";
    syntax GlobalAttributeSection         = "[" GlobalAttributeTargetSpecifier sm AttributeList "]"nl;

    regex AttributeTarget = "field" | "event" | "method" | "param" | "property" | "return" | "type" | "typevar";

    syntax AttributeTargetSpecifier = AttributeTarget ":";
    syntax AttributeSection         = "[" AttributeTargetSpecifier? AttributeList "]"nl;
  }
}
