using Nitra;
using Nitra.Declarations;

using Nemerle.Collections;

using System.Collections.Immutable;

using SCG = System.Collections.Generic;

namespace DotNet
{
  abstract declaration ConstructedType : Type
  {
    symbol
    {
      in TypeInfo : GenericTypeSymbol;
      in Args     : ImmutableArray[TypeSymbol];

      FullName = AstUtils.MakeFullName(TypeInfo.DeclaredInOpt, TypeInfo.Name, Args);
    }
  }

  declaration TopConstructedType : ConstructedType
  {
    symbol
    {
      MakeHint = ConstructedTypeImpl.MakeHint(this);

      Scope = TopSubstScope(TypeInfo, TypeInfo.Scope, Args);
    }
  }

  declaration NestedConstructedType : ConstructedType
  {
    symbol
    {
      in Parent : TypeSymbol; //TODO: excude TypeParameterSymbol

      MakeHint = ConstructedTypeImpl.MakeHint(this);
      Scope = NestedSubstScope(TypeInfo, TypeInfo.Scope, Args, Parent);
    }
  }
}
