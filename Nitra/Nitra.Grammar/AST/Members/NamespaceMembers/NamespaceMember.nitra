using DotNet;

using Nitra.Declarations;

using System.Linq;

namespace Nitra.Ast
{
  declaration TopAst : Nitra.Ast.Ast, NamespaceMemberDeclaration
  {
    symbol
    {
      CanMerge = candidate is TopAst && FirstDeclarationOrDefault is PredefinedDeclaration;
      MakeHint = AstUtils.SupportsInheritanceTypeMakeHint(symbolCache, this);
    }

    Members.Parent = Symbol;

    EmitSymbol(Symbol, context);
  }

  abstract declaration SymbolDeclaration : SupportsInheritanceType
  {
    sealed symbol
    {
      in AssociatedDeclaration : AstSymbol;
      FullName = AstUtils.MakeFullName(AssociatedDeclaration.DeclaredInOpt, this.Name);
      MakeHint = AstUtils.SupportsInheritanceTypeMakeHint(symbolCache, this);
    }

    in AssociatedDeclaration : ValueOption[AstSymbol];

    Symbol.AssociatedDeclaration.AssociatedSymbol = Symbol;
    Symbol.BaseTypeSet |= AstUtils.SymbolDeclarationBaseTypeSet(Symbol.AssociatedDeclaration.BaseTypeSet.ParentTypes);

    Symbol.AssociatedDeclaration = AssociatedDeclaration.Value;
  }

  declaration ExplicitSymbolDeclaration : SymbolDeclaration
  {
  }

  declaration ImplicitSymbolDeclaration : SymbolDeclaration
  {
  }
}
