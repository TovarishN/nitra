using Nemerle;
using Nemerle.Collections;
using Nemerle.Imperative;
using Nemerle.Text;
using Nemerle.Utility;

using System;
using System.Collections.Generic;
using System.Linq;

using SpanInfo2 = Nitra.ClientServer.Messages.SpanInfo;

namespace Nitra.ClientServer.Server
{
  class SpanInfoComparer : IComparer[SpanInfo2]
  {
    _spanClassesManager : SpanClassesManager;
    _fieldSpanClassId : int;

    public this(spanClassesManager : SpanClassesManager)
    {
      _spanClassesManager = spanClassesManager;
      def spanClasses = spanClassesManager.GetSpanClasses();
      foreach (spanClass in spanClasses)
        when (spanClass.Name == "Field")
        {
          _fieldSpanClassId = spanClassesManager[spanClass];
          break;
        }
    }

    public Compare(x : SpanInfo2, y : SpanInfo2) : int
    {
      def res = x.Span.StartPos.CompareTo(y.Span.StartPos);
      when (res != 0)
        return res;

      if (y.SpanClassId == _fieldSpanClassId && x.SpanClassId != _fieldSpanClassId)
        -1
      else if (x.SpanClassId == _fieldSpanClassId && y.SpanClassId != _fieldSpanClassId)
        1
      else
        res
    }
  }
}
