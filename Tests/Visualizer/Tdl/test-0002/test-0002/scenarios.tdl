product KSOS__PURE__PURE_Webpack : Kavkis  = KSOS, PURE, PURE_Webpack;
platform all_pc__win2012r2 = all_pc, win2012r2;
platform win7-x64__win811-x86 = win7-x64, win811-x86;
platform w10rs4-x64__win7-x64__win811-x86 = w10rs4-x64, win7-x64, win811-x86;

scenario TryDisinfectWithoutRestart
{
    deployment Deploy_Backdoor;
    environments (all_pc__win2012r2, KAVKIS);
    method Autotest.Kis.Suites.AdvancedDisinfection.AdvancedDisinfectionAutomaticActionTest.TryDisinfectWithoutRestart;
    Area = @"AdvancedDisinfection";
    UniqueId = @"C9E7C8CF-9C40-4F10-A8CE-08FAA7E99BB9";
    TfsId = 2145098;
    RevertAgentAfter = true;
    Timeout = @"00:15:00";
}

scenario CheckBlockBannerByUrl
{
    deployment Deploy_Backdoor;
    environments (all_pc, KAVKIS);
    method Autotest.Kis.Suites.AntiBanner.BannerCheckBlockingTests.CheckBlockBannerByUrl;
    Area = @"AntiBanner";
    UniqueId = @"9365B31B-28BA-4D40-A116-304B022A2946";
    TfsId = 1638532;
    Timeout = @"00:15:00";
}

scenario CheckBlockingBannerOnHttps
{
    deployment Deploy_Backdoor;
    environments (all_pc, KAVKIS);
    method Autotest.Kis.Suites.AntiBanner.BannerCheckBlockingTests.CheckBlockingBannerOnHttps;
    Area = @"AntiBanner";
    UniqueId = @"E3CA10BC-5C2A-4391-9FC3-A8DC08CDC25C";
    TfsId = 1651464;
    Timeout = @"00:15:00";
}

scenario CheckBlockingBannersFromWhiteList
{
    deployment Deploy_Backdoor;
    environments (all_pc, KAVKIS);
    method Autotest.Kis.Suites.AntiBanner.BannerCheckBlockingTests.CheckBlockingBannersFromWhiteList;
    Area = @"AntiBanner";
    UniqueId = @"9BB07505-9BBF-4095-8483-448EA1BCE668";
    TfsId = 1638660;
    Timeout = @"00:15:00";
}

scenario CheckBlockingBlackBannersOnWhitePage
{
    deployment Deploy_Backdoor;
    environments (all_pc, KAVKIS);
    method Autotest.Kis.Suites.AntiBanner.BannerCheckBlockingTests.CheckBlockingBlackBannersOnWhitePage;
    Area = @"AntiBanner";
    UniqueId = @"6CB32662-4287-43A1-9B2E-08D5609CD623";
    TfsId = 1653437;
    Timeout = @"00:15:00";
}

scenario AntiPhishingAndKsnCombinedWmufTestMock
{
    deployment Deploy_Backdoor_Without_AppVerifier;
    environments (all_pc, KAVKIS);
    method Autotest.Kis.Suites.AntiSpam.AntiSpamKsnMockTests.AntiPhishingAndKsnCombinedWmufTestMock;
    RevertAgentAfter = true;
    RevertAgentBefore = true;
    Area = @"AntiSpam";
    UniqueId = @"5DCFE386-9C7D-466D-AAC4-A0EB9181BC49";
    TfsId = 184726;
    Timeout = @"00:15:00";
}

scenario AntiPhishingSearchByHashBvt
{
    deployment Deploy_Backdoor;
    environments (all_pc, KAVKIS);
    method Autotest.Kis.Suites.WebAv.WebAvCommonTests.AntiPhishingSearchByHashBvt;
    RevertAgentAfter = true;
    Area = @"WebAv";
    UniqueId = @"A576AFE9-7D13-465B-AF61-391969A48D1B";
    TfsId = 187942;
    Timeout = @"00:15:00";
}

scenario AntiPhishingSearchByLinkBvt
{
    deployment Deploy_Backdoor;
    environments (all_pc, KAVKIS);
    method Autotest.Kis.Suites.WebAv.WebAvCommonTests.AntiPhishingSearchByLinkBvt;
    RevertAgentAfter = true;
    Area = @"WebAv";
    UniqueId = @"FC232752-A3E8-4A4E-BFD4-B8C33ADA3A95";
    TfsId = 187941;
    Timeout = @"00:15:00";
}

scenario FtpDetectEicarFileLessThan1MbBlock
{
    deployment Deploy_Backdoor;
    environments (all_pc, KAVKIS);
    method Autotest.Kis.Suites.WebAv.WebAvCommonTests.FtpDetectEicarFileLessThan1MbBlock;
    RevertAgentAfter = true;
    Area = @"WebAv";
    UniqueId = @"BA7484E0-4C09-4F54-9376-13F4DDF566EB";
    TfsId = 184150;
    Timeout = @"00:15:00";
}

scenario CheckCombinedOperationAntiFishingMessage
{
    deployment Deploy_Backdoor_Without_AppVerifier;
    environments (all_pc, KAVKIS);
    method Autotest.Kis.Suites.AntiSpam.AntiSpamTests.CheckCombinedOperationAntiFishingMessage;
    Area = @"AntiSpam";
    UniqueId = @"827CCC11-4961-470A-BA82-1E0B4D95381B";
    TfsId = 187549;
    Timeout = @"00:15:00";
}

scenario CheckCombinedOperationAntiFishingVirus
{
    deployment Deploy_Backdoor_Without_AppVerifier;
    environments (all_pc, KAVKIS);
    method Autotest.Kis.Suites.AntiSpam.AntiSpamTests.CheckCombinedOperationAntiFishingVirus;
    Area = @"AntiSpam";
    UniqueId = @"1C1842C8-087B-442C-A538-248CB0ADA8C7";
    TfsId = 187549;
    Timeout = @"00:15:00";
}

scenario CheckCombinedOperationAntiFishingWmuf
{
    deployment Deploy_Backdoor_Without_AppVerifier;
    environments (all_pc, KAVKIS);
    method Autotest.Kis.Suites.AntiSpam.AntiSpamTests.CheckCombinedOperationAntiFishingWmuf;
    Area = @"AntiSpam";
    UniqueId = @"4E7D35BB-7FA9-4782-8C6F-75475115DFD3";
    TfsId = 187549;
    Timeout = @"00:15:00";
}

scenario TrafficMonitorEnableDisableEicarHamTest
{
    deployment Deploy_Backdoor_Without_AppVerifier;
    environments (all_pc, KAVKIS);
    method Autotest.Kis.Suites.AntiSpam.AntiSpamTests.TrafficMonitorEnableDisableEicarHamTest;
    Area = @"AntiSpam";
    UniqueId = @"1D2B4779-A8B9-4877-878C-F34A56EF4C0F";
    TfsId = 187550;
    Timeout = @"00:15:00";
}

scenario TrafficMonitorEnableDisableEicarProbableSpamTest
{
    deployment Deploy_Backdoor_Without_AppVerifier;
    environments (all_pc, KAVKIS);
    method Autotest.Kis.Suites.AntiSpam.AntiSpamTests.TrafficMonitorEnableDisableEicarProbableSpamTest;
    Area = @"AntiSpam";
    UniqueId = @"3E14E1B5-D44B-4DFB-A124-891F84077775";
    TfsId = 187550;
    Timeout = @"00:15:00";
}

scenario TrafficMonitorEnableDisableEicarSpamTest
{
    deployment Deploy_Backdoor_Without_AppVerifier;
    environments (all_pc, KAVKIS);
    method Autotest.Kis.Suites.AntiSpam.AntiSpamTests.TrafficMonitorEnableDisableEicarSpamTest;
    Area = @"AntiSpam";
    UniqueId = @"9CDA2B3D-15CF-4A01-9206-2BCF809AD30F";
    TfsId = 187550;
    Timeout = @"00:15:00";
}

scenario DetectionDependingOnEmulationLevelScanFilesMedium
{
    deployment Deploy_Backdoor;
    environments (all_pc, KAVKIS);
    method Autotest.Kis.Suites.Avs.ScriptEmulatorTests.DetectionDependingOnEmulationLevelScanFilesMedium;
    Area = @"Avs";
    UniqueId = @"CB373FFE-0A2E-4AB1-B82E-BA0D1358D469";
    TfsId = 186320;
    Timeout = @"00:15:00";
}

scenario HeuristicAnalysisHigh
{
    deployment Deploy_Backdoor;
    environments (all_pc, KAVKIS);
    method Autotest.Kis.Suites.Avs.OasHeuristicAnalysisTests.HeuristicAnalysisHigh;
    Area = @"Avs";
    UniqueId = @"1C0980BF-20EF-4B92-9831-21FE6EF4AC09";
    TfsId = 187443;
    Timeout = @"00:15:00";
}

scenario DeleteLocalStorageTest
{
    deployment Deploy_Backdoor;
    environments (all_pc, KAVKIS);
    method Autotest.Kis.Suites.Backup.BackupDeleteStorageTests.DeleteLocalStorageTest;
    Area = @"Backup";
    UniqueId = @"59295CE6-71F4-436E-B656-08CB56512F86";
    TfsId = 1042235;
    Timeout = @"00:15:00";
}

scenario DeleteTaskWithDataFromLocalStorage
{
    deployment Deploy_Backdoor;
    environments (all_pc, KAVKIS);
    method Autotest.Kis.Suites.Backup.BackupDeleteTaskTest.DeleteTaskWithDataFromLocalStorage;
    Area = @"Backup";
    UniqueId = @"0A464A55-84E3-4F89-A21B-1EA9D555E3E2";
    TfsId = 1042305;
    Timeout = @"00:15:00";
}

scenario DeleteTaskWithoutDataFromLocalStorage
{
    deployment Deploy_Backdoor;
    environments (all_pc, KAVKIS);
    method Autotest.Kis.Suites.Backup.BackupDeleteTaskTest.DeleteTaskWithoutDataFromLocalStorage;
    Area = @"Backup";
    UniqueId = @"1B873686-99B7-42CD-A5CA-DFFD6EC067C7";
    TfsId = 1042305;
    Timeout = @"00:15:00";
}

scenario BlockAnalytics
{
    deployment Deploy_Backdoor;
    environments (all_pc, KAVKIS);
    method Autotest.Kis.Suites.Dnt.BlockWebAnalytics.BlockAnalytics;
    Area = @"Dnt";
    UniqueId = @"AD793953-A78C-49DC-8129-3F4D2DF61A13";
    TfsId = 1075088;
    Timeout = @"00:15:00";
}

scenario BlockTwitter
{
    deployment Deploy_Backdoor;
    environments (all_pc, KAVKIS);
    method Autotest.Kis.Suites.Dnt.BlockSocialNetworks.BlockTwitter;
    Area = @"Dnt";
    UniqueId = @"02AC7E95-34A1-407E-AFA7-7F5B3F9DC9C7";
    TfsId = 1075086;
    Timeout = @"00:15:00";
}

scenario BlockFacebook
{
    deployment Deploy_Backdoor;
    environments (all_pc, KAVKIS);
    method Autotest.Kis.Suites.Dnt.BlockSocialNetworks.BlockFacebook;
    Area = @"Dnt";
    UniqueId = @"6B50BE6E-B070-43CD-9B71-A8347DD1DE80";
    TfsId = 1075086;
    Timeout = @"00:15:00";
}

scenario SupportSystemReportAssistance
{
    deployment Deploy_Backdoor;
    environments (all_pc, KAVKIS);
    method Autotest.Kis.Suites.AVZ.SupportToolsTests.SupportSystemReportAssistance;
    Area = @"AVZ";
    UniqueId = @"62FDA2CA-1B42-47AF-9890-F3F5446B7B02";
    TfsId = 184838;
    Timeout = @"00:15:00";
}

scenario CheckCreateDump
{
    deployment Deploy_Backdoor;
    environments (all_pc, KAVKIS);
    method Autotest.Kis.Suites.Dump.WithoutSendingDumpTest.CheckCreateDump;
    Area = @"Dump";
    UniqueId = @"7D5FC027-48CC-4807-B94D-CA02DA945701";
    TfsId = 182944;
    Timeout = @"00:15:00";
}

scenario DetectAndDeleteThreatsFromVault
{
    deployment Deploy_Backdoor;
    environments (all_pc__win2012r2, KAVKIS);
    method Autotest.Kis.Suites.Encryption.ThreatsInVault.DetectAndDeleteThreatsFromVault;
    Area = @"Encryption";
    UniqueId = @"36E42BCC-9B4B-4235-8642-FBB339FD9C38";
    TfsId = 1058598;
    Timeout = @"00:15:00";
}

scenario CheckSendingDumpOnOneFtpServerTest
{
    deployment Deploy_Backdoor;
    environments (all_pc, KAVKIS);
    method Autotest.Kis.Suites.Dump.SendingDumpOnOneFtpServerTest.CheckSendingDumpOnOneFtpServerTest;
    Area = @"Dump";
    UniqueId = @"9849AE4E-4CFB-4442-913B-81034D43F8D6";
    TfsId = 182944;
    Timeout = @"00:15:00";
}

scenario ShredFileInUse
{
    deployment Deploy_Backdoor;
    environments (all_pc, KAVKIS);
    method Autotest.Kis.Suites.FileShredder.FileShredderTests.ShredFileInUse;
    Area = @"FileShredder";
    UniqueId = @"C5CC0271-4339-44BD-9AED-2CF24AD6CE97";
    TfsId = 1065393;
    Timeout = @"00:15:00";
}

scenario ShredFolderWithFileInUse
{
    deployment Deploy_Backdoor;
    environments (all_pc, KAVKIS);
    method Autotest.Kis.Suites.FileShredder.FileShredderTests.ShredFolderWithFileInUse;
    Area = @"FileShredder";
    UniqueId = @"F3A30F31-2EE3-44BA-8D68-261084D57260";
    TfsId = 1065393;
    Timeout = @"00:15:00";
}

scenario ShredNonAccessibleFiles
{
    deployment Deploy_Backdoor;
    environments (all_pc, KAVKIS);
    method Autotest.Kis.Suites.FileShredder.FileShredderTests.ShredNonAccessibleFiles;
    Area = @"FileShredder";
    UniqueId = @"063CB789-EFD2-4E22-8BA4-59A36DA7657C";
    TfsId = 1065393;
    Timeout = @"00:15:00";
}

scenario ShredNonExistentFiles
{
    deployment Deploy_Backdoor;
    environments (all_pc, KAVKIS);
    method Autotest.Kis.Suites.FileShredder.FileShredderTests.ShredNonExistentFiles;
    Area = @"FileShredder";
    UniqueId = @"86AAF994-9CD2-4913-B773-9B821CA77460";
    TfsId = 1065393;
    Timeout = @"00:15:00";
}

scenario ShredProgramFiles
{
    deployment Deploy_Backdoor;
    environments (all_pc, KAVKIS);
    method Autotest.Kis.Suites.FileShredder.FileShredderTests.ShredProgramFiles;
    Area = @"FileShredder";
    UniqueId = @"45784AAD-C2CA-4B33-8E0E-E62BE0C41B20";
    TfsId = 1065393;
    Timeout = @"00:15:00";
}

scenario ShredSystemFile
{
    deployment Deploy_Backdoor;
    environments (all_pc, KAVKIS);
    method Autotest.Kis.Suites.FileShredder.FileShredderTests.ShredSystemFile;
    Area = @"FileShredder";
    UniqueId = @"F11E4824-CAEB-4761-98F0-F7997F84E7C3";
    TfsId = 1651464;
    Timeout = @"00:15:00";
}

scenario AppRuleTcpIpv4BlockedRemoteHostNotInList
{
    deployment Deploy_Backdoor;
    environments (all_pc, KAVKIS);
    method Autotest.Kis.Suites.Firewall.TcpTrafficAppRulesTestsIpv4.AppRuleTcpIpv4BlockedRemoteHostNotInList;
    Area = @"Firewall";
    UniqueId = @"964173B8-3A12-4EEB-AB7B-3F84518584BA";
    TfsId = 187752;
    Timeout = @"00:15:00";
}

scenario CheckIdsForTcpIpV4
{
    deployment Deploy_Backdoor;
    environments (all_pc__win2012r2, KAVKIS);
    method Autotest.Kis.Suites.Firewall.IdsSmokeTests.CheckIdsForTcpIpV4;
    RevertAgentBefore = true;
    Area = @"Firewall";
    UniqueId = @"EB4E3773-48AE-4D1B-8C5D-93277A0F58AE";
    TfsId = 187198;
    Timeout = @"00:15:00";
}

scenario CheckSilentDetectForTcpIpV4
{
    deployment Deploy_Backdoor;
    environments (all_pc, KAVKIS);
    method Autotest.Kis.Suites.Firewall.IntrusionDetectionSystem.CheckSilentDetectForTcpIpV4;
    Area = @"Firewall";
    UniqueId = @"69EB081F-8F6F-4A40-9B62-F00360B0AC85";
    TfsId = 185009;
    Timeout = @"00:15:00";
}

scenario HighRestrictedGroupOutcomingIcmpIpv4Blocked
{
    deployment Deploy_Backdoor;
    environments (all_pc, KAVKIS);
    method Autotest.Kis.Suites.Firewall.IcmpPackageTestsIpv4.HighRestrictedGroupOutcomingIcmpIpv4Blocked;
    Area = @"Firewall";
    UniqueId = @"EBDC0143-8CDE-4C63-8F98-E48F00B1DC94";
    TfsId = 187644;
    Timeout = @"00:15:00";
}

scenario PriorityOfNetworkPackageRulesAllow
{
    deployment Deploy_Backdoor;
    environments (all_pc__win2012r2, KAVKIS);
    method Autotest.Kis.Suites.Firewall.TcpTrafficPackageRulesTestsIpv4.PriorityOfNetworkPackageRulesAllow;
    Area = @"Firewall";
    UniqueId = @"DA5214D4-4059-4B74-B24C-83D400E593A3";
    TfsId = 187628;
    Timeout = @"00:15:00";
}

scenario PriorityOfNetworkPackageRulesBlock
{
    deployment Deploy_Backdoor;
    environments (all_pc__win2012r2, KAVKIS);
    method Autotest.Kis.Suites.Firewall.TcpTrafficPackageRulesTestsIpv4.PriorityOfNetworkPackageRulesBlock;
    Area = @"Firewall";
    UniqueId = @"FC4E180C-66B9-48D2-89E9-CC45AB237E80";
    TfsId = 187628;
    Timeout = @"00:15:00";
}

scenario CheckLocalizationFullyTranslated
{
    deployment Deploy_Backdoor;
    environments (win7-x64, KAVKIS);
    method Autotest.Kis.Suites.GUI.LocalizationTests.CheckLocalizationFullyTranslated;
    Area = @"GUI";
    UniqueId = @"94A6C362-A525-4B4D-B018-3BA84EC02BEA";
    TfsId = 3004163;
    Timeout = @"00:15:00";
}

scenario SomeComponentsAreDisabled
{
    deployment Deploy_Backdoor;
    environments (all_pc, KAVKIS);
    method Autotest.Kis.Suites.GUI.ProblemListTests.SomeComponentsAreDisabled;
    RevertAgentAfter = true;
    Area = @"GUI";
    UniqueId = @"25DFB578-FBFA-4B0B-A11C-BF93D7316E94";
    TfsId = 187871;
    Timeout = @"00:15:00";
}

scenario DefaultRightForStartProcess
{
    deployment Deploy_Backdoor;
    environments (all_pc__win2012r2, KAVKIS);
    method Autotest.Kis.Suites.Hips.StartOtherProcessTests.DefaultRightForStartProcess;
    RevertAgentBefore = true;
    Area = @"Hips";
    UniqueId = @"F954F9CD-8B35-469B-86C1-C968B982B43C";
    TfsId = 186940;
    Timeout = @"00:15:00";
}

scenario HipsObjectsProcessing
{
    deployment Deploy_Backdoor;
    environments (all_pc__win2012r2, KAVKIS);
    method Autotest.Kis.Suites.Hips.ObjectsProcessingTests.HipsObjectsProcessing;
    RevertAgentBefore = true;
    RevertAgentAfter = true;
    Area = @"Hips";
    UniqueId = @"2F57045E-8C79-477F-B758-BC6745DA59B8";
    TfsId = 1055377;
    Timeout = @"00:15:00";
}

scenario ProcessStartBlockedWhenActionBlockSelected
{
    deployment Deploy_Backdoor;
    environments (all_pc__win2012r2, KAVKIS);
    method Autotest.Kis.Suites.Hips.StartOtherProcessTests.ProcessStartBlockedWhenActionBlockSelected;
    RevertAgentAfter = true;
    Area = @"Hips";
    UniqueId = @"1BAAE8CD-0B10-4D2F-826E-C978FB2DE86D";
    TfsId = 186940;
    Timeout = @"00:15:00";
}

scenario ProcessStartBlocked
{
    deployment Deploy_Backdoor;
    environments (all_pc__win2012r2, KAVKIS);
    method Autotest.Kis.Suites.Hips.StartOtherProcessTests.ProcessStartBlocked;
    RevertAgentBefore = true;
    RevertAgentAfter = true;
    Area = @"Hips";
    UniqueId = @"DC373CE9-3565-453C-9001-34D63A88A385";
    TfsId = 186940;
    Timeout = @"00:15:00";
}

scenario ScanKlCategoriesCategorizedObject
{
    deployment Deploy_Backdoor;
    environments (all_pc, KAVKIS);
    method Autotest.Kis.Suites.Hips.KashellScanKlCategoriesTests.ScanKlCategoriesCategorizedObject;
    Area = @"Hips";
    UniqueId = @"90FA4364-62C6-4BA1-8BAE-FE2712707863";
    TfsId = 2206758;
    Timeout = @"00:15:00";
}

scenario ScanKlCategoriesUncategorizedObject
{
    deployment Deploy_Backdoor;
    environments (all_pc, KAVKIS);
    method Autotest.Kis.Suites.Hips.KashellScanKlCategoriesTests.ScanKlCategoriesUncategorizedObject;
    Area = @"Hips";
    UniqueId = @"65CDE9DB-0B92-44DD-A3A8-C03CE3BDD146";
    TfsId = 2206887;
    Timeout = @"00:15:00";
}

scenario CheckRetrieveWmuf
{
    deployment Deploy_Backdoor;
    environments (all_pc, KAVKIS);
    method Autotest.Kis.Suites.Imav.ImavTests.CheckRetrieveWmuf;
    RevertAgentAfter = true;
    NeedUnsignedAgent = true;
    Area = @"Imav";
    UniqueId = @"E472A0E5-AB35-4A01-8568-4EDA541B5A32";
    TfsId = 183764;
    Timeout = @"00:15:00";
}

scenario CheckSendPhishing
{
    deployment Deploy_Backdoor;
    environments (all_pc, KAVKIS);
    method Autotest.Kis.Suites.Imav.ImavTests.CheckSendPhishing;
    RevertAgentAfter = true;
    NeedUnsignedAgent = true;
    Area = @"Imav";
    UniqueId = @"995E8340-3544-48FF-A3B1-0145B7DC3AD6";
    TfsId = 183765;
    Timeout = @"00:15:00";
}

scenario CheckSendWmuf
{
    deployment Deploy_Backdoor;
    environments (all_pc, KAVKIS);
    method Autotest.Kis.Suites.Imav.ImavTests.CheckSendWmuf;
    RevertAgentAfter = true;
    NeedUnsignedAgent = true;
    Area = @"Imav";
    UniqueId = @"AB0DA1C3-6B71-4179-8B49-0E179EB9EAB5";
    TfsId = 183764;
    Timeout = @"00:15:00";
}

scenario CheckAdditionalFilesAndFoldersExists
{
    deployment Deploy_Backdoor_Without_AppVerifier;
    environments (all_pc__win2012r2, KAVKIS);
    method Autotest.Kis.Suites.Installation.InstallationSecondPartTests.CheckAdditionalFilesAndFoldersExists;
    Area = @"Installation";
    UniqueId = @"E7859823-05F5-4E85-969E-DEA460F647E8";
    TfsId = 186770;
    Timeout = @"00:15:00";
}

scenario CheckAdditionalRegistryKeysExists
{
    deployment Deploy_Backdoor_Without_AppVerifier;
    environments (all_pc__win2012r2, KAVKIS);
    method Autotest.Kis.Suites.Installation.InstallationSecondPartTests.CheckAdditionalRegistryKeysExists;
    Area = @"Installation";
    UniqueId = @"7FDD11E8-4352-4BD7-B1D0-44EE981870E0";
    TfsId = 186576;
    Timeout = @"00:15:00";
}

scenario CheckDownloaderFileSize
{
    deployment Deploy_NoInstall;
    environments (all_pc__win2012r2, KAVKIS);
    method Autotest.Kis.Suites.Installation.DownloaderSizeTests.CheckDownloaderFileSize;
    Area = @"Installation";
    UniqueId = @"B7011228-6B6B-48C5-BD0E-700B724E8E95";
    TfsId = 1698119;
    Timeout = @"00:15:00";
}

scenario CheckImportOfExportedSettings
{
    deployment Deploy_Backdoor;
    environments (all_pc, KAVKIS);
    method Autotest.Kis.Suites.Installation.SettingsImportForKts.CheckImportOfExportedSettings;
    RevertAgentBefore = true;
    RevertAgentAfter = true;
    Area = @"Installation";
    UniqueId = @"36242311-4368-4537-9692-E34B2B0863C4";
    TfsId = 1010106;
    Timeout = @"00:15:00";
}

scenario CheckInstallationGui
{
    deployment Deploy_NoInstall;
    environments (all_pc__win2012r2, KAVKIS);
    method Autotest.Kis.Suites.Installation.InstallationDeployLessTests.CheckInstallationGui;
    RevertAgentAfter = true;
    Area = @"Installation";
    UniqueId = @"4F6A4B0E-619B-4BFA-9E60-7637BDD29BE4";
    TfsId = 187373;
    Timeout = @"00:15:00";
}

scenario ImportMaxSettingsFromOlderVersionsKts
{
    deployment Deploy_Backdoor;
    environments (all_pc, KAVKIS);
    method Autotest.Kis.Suites.Installation.SettingsImportForKts.ImportMaxSettingsFromOlderVersionsKts;
    RevertAgentAfter = true;
    Area = @"Installation";
    UniqueId = @"A650DE37-9E1B-4152-9A62-2EB7DDC1340B";
    TfsId = 1010106;
    Timeout = @"00:15:00";
}

scenario ImportMinSettingsFromOlderVersionsKts
{
    deployment Deploy_Backdoor;
    environments (all_pc, KAVKIS);
    method Autotest.Kis.Suites.Installation.SettingsImportForKts.ImportMinSettingsFromOlderVersionsKts;
    RevertAgentAfter = true;
    Area = @"Installation";
    UniqueId = @"49B10D98-5F18-461C-9D78-A1240F0A5F5F";
    TfsId = 1010106;
    Timeout = @"00:15:00";
}

scenario ImportOffSettingsFromOlderVersionsKts
{
    deployment Deploy_Backdoor;
    environments (all_pc, KAVKIS);
    method Autotest.Kis.Suites.Installation.SettingsImportForKts.ImportOffSettingsFromOlderVersionsKts;
    RevertAgentAfter = true;
    Area = @"Installation";
    UniqueId = @"49B10D98-5F18-461C-9D78-A1240F0A5F5F";
    TfsId = 1010106;
    Timeout = @"00:15:00";
}

scenario KsnOdsEicarSmoke
{
    deployment Deploy_Backdoor;
    environments (all_pc__win2012r2, KAVKIS);
    method Autotest.Kis.Suites.Ksn.KsnOasOdsTests.KsnOdsEicarSmoke;
    RevertAgentAfter = true;
    RevertAgentBefore = true;
    Area = @"Ksn";
    UniqueId = @"FBE9A35A-38CD-4ACD-A633-ED60EE2AC8B5";
    TfsId = 185669;
    Timeout = @"00:15:00";
}

scenario ActivateCommercialSmoke
{
    deployment Deploy_NoBackdoor;
    environments (all_pc__win2012r2, KAVKIS);
    method Autotest.Kis.Suites.License.LicenseTests.ActivateCommercialSmoke;
    RevertAgentAfter = true;
    RevertAgentBefore = true;
    Area = @"License";
    UniqueId = @"6658B774-7A8F-484F-9BFA-73E9B5882681";
    TfsId = 187372;
    Timeout = @"00:15:00";
}

scenario ActivateTrialSmoke
{
    deployment Deploy_NoBackdoor;
    environments (all_pc__win2012r2, KAVKIS);
    method Autotest.Kis.Suites.License.LicenseTests.ActivateTrialSmoke;
    RevertAgentAfter = true;
    RevertAgentBefore = true;
    Area = @"License";
    UniqueId = @"455BC9FE-186C-4FDE-B889-2A2208FF9E7E";
    TfsId = 187371;
    Timeout = @"00:15:00";
}

scenario ActivateCommercial
{
    deployment Deploy_Backdoor;
    environments (all_pc, KAVKIS);
    method Autotest.Kis.Suites.LicenseBackdoor.LicenseTestsBackdoor.ActivateCommercial;
    RevertAgentAfter = true;
    RevertAgentBefore = true;
    Area = @"LicenseBackdoor";
    UniqueId = @"8A299376-A84C-4BA0-833E-130D1D395A80";
    TfsId = 183592;
    Timeout = @"00:15:00";
}

scenario RepeatActualTrialActivation
{
    deployment Deploy_Backdoor;
    environments (all_pc, KAVKIS);
    method Autotest.Kis.Suites.LicenseBackdoor.LicenseTestsBackdoor.RepeatActualTrialActivation;
    RevertAgentAfter = true;
    RevertAgentBefore = true;
    Area = @"LicenseBackdoor";
    UniqueId = @"2C702393-AB18-4FC8-A255-934ACF8F5822";
    TfsId = 183575;
    Timeout = @"00:15:00";
}

scenario DetectAllTypesOfBodyEicar
{
    deployment Deploy_Backdoor;
    environments (all_pc, KAVKIS);
    method Autotest.Kis.Suites.MailAv.TrafficMonitorTests.DetectAllTypesOfBodyEicar;
    Area = @"MailAv";
    UniqueId = @"31F707B4-4E28-4098-AA51-A77CD2D08325";
    TfsId = 187956;
    Timeout = @"00:15:00";
}

scenario DetectAllTypesOfEicar
{
    deployment Deploy_Backdoor_Without_AppVerifier;
    environments (all_pc, KAVKIS);
    method Autotest.Kis.Suites.MailAv.TrafficMonitorTests.DetectAllTypesOfEicar;
    Area = @"MailAv";
    UniqueId = @"1811B4BF-99D7-4527-99D6-4466C2D9568D";
    TfsId = 188011;
    Timeout = @"00:15:00";
}

scenario SendInfoApplicationControlMock
{
    deployment Deploy_Backdoor;
    environments (all_pc, KAVKIS);
    method Autotest.Kis.Suites.ManagementConsole.ManagementConsoleProtectionComponentsMockTests.SendInfoApplicationControlMock;
    RevertAgentBefore = true;
    Area = @"ManagementConsole";
    UniqueId = @"BFAEF220-B650-4472-A4FD-F0382D3A80D2";
    TfsId = 180481;
    Timeout = @"00:15:00";
}

scenario ActionNoSuspicious
{
    deployment Deploy_Backdoor;
    environments (all_pc, KAVKIS);
    method Autotest.Kis.Suites.Oas.OasTestsActionCheck.ActionNoSuspicious;
    Area = @"Oas";
    UniqueId = @"10706BE7-319F-4BB3-AE54-EB38DF33F208";
    TfsId = 2610101;
    Timeout = @"00:15:00";
}

scenario DetectWithUnpackingLargeCompound
{
    deployment Deploy_Backdoor;
    environments (all_pc, KAVKIS);
    method Autotest.Kis.Suites.Oas.OasTestsCompoundsFiles.DetectWithUnpackingLargeCompound;
    Area = @"Oas";
    UniqueId = @"9B3BF9DA-76CF-4D26-ADC4-BCB549614EEE";
    TfsId = 187450;
    Timeout = @"00:30:00";
}

scenario DetectWithoutUnpackingLargeCompound
{
    deployment Deploy_Backdoor;
    environments (all_pc, KAVKIS);
    method Autotest.Kis.Suites.Oas.OasTestsCompoundsFiles.DetectWithoutUnpackingLargeCompound;
    Area = @"Oas";
    UniqueId = @"E13FCA25-5AB5-486C-9FDB-85D9D84B7592";
    TfsId = 187450;
    Timeout = @"00:15:00";
}

scenario ScanFilesByExtension
{
    deployment Deploy_Backdoor_Without_AppVerifier;
    environments (all_pc, KAVKIS);
    method Autotest.Kis.Suites.Oas.OasTestsSecondPart.ScanFilesByExtension;
    RevertAgentAfter = true;
    Area = @"Oas";
    UniqueId = @"38914011-E432-4032-8EB6-C82844BFBDFE";
    TfsId = 187453;
    Timeout = @"00:15:00";
}

scenario ScanEmailObjectsHeuristic
{
    deployment Deploy_Backdoor;
    environments (all_pc, KAVKIS);
    method Autotest.Kis.Suites.Ods.KashellScanEmailObjectsTests.ScanEmailObjectsHeuristic;
    RevertAgentAfter = true;
    Area = @"Ods";
    UniqueId = @"D3BCF576-DBA7-4A56-8819-BC131E56CD13";
    TfsId = 2206640;
    Timeout = @"00:15:00";
}

scenario ScanVulnerabilityAllDetection
{
    deployment Deploy_Backdoor;
    environments (all_pc, KAVKIS);
    method Autotest.Kis.Suites.Ods.KashellScanVulnerabilityTests.ScanVulnerabilityAllDetection;
    RevertAgentAfter = true;
    Area = @"Ods";
    UniqueId = @"55B7BD4E-DABA-4EF1-A9BB-34F9142CE07A";
    TfsId = 2206597;
    Timeout = @"00:15:00";
}

scenario ScanVulnerabilityPartialDetection
{
    deployment Deploy_Backdoor;
    environments (all_pc, KAVKIS);
    method Autotest.Kis.Suites.Ods.KashellScanVulnerabilityTests.ScanVulnerabilityPartialDetection;
    RevertAgentAfter = true;
    Area = @"Ods";
    UniqueId = @"E5BF4C5E-9D2C-4DC5-825D-3AE13156BB7A";
    TfsId = 2206598;
    Timeout = @"00:15:00";
}

scenario BadWordsInMetaDescriptionViaInternetExplorer
{
    deployment Deploy_Backdoor;
    environments (all_pc, KAVKIS);
    method Autotest.Kis.Suites.ParentalControl.ParentalControlInternetTests.BadWordsInMetaDescriptionViaInternetExplorer;
    Area = @"ParentalControl";
    UniqueId = @"01AE536C-285F-45A9-9EA0-7A435E7C84A0";
    TfsId = 186636;
    Timeout = @"00:15:00";
}

scenario StartApplicationFromWhiteList
{
    deployment Deploy_Backdoor;
    environments (all_pc, KAVKIS);
    method Autotest.Kis.Suites.ParentalControl.ParentalControlApplicationTests.StartApplicationFromWhiteList;
    Area = @"ParentalControl";
    UniqueId = @"D53AC245-58C6-46F5-A066-E5C9FAC0EB0F";
    TfsId = 186719;
    Timeout = @"00:15:00";
}

scenario StartBlockedApplication
{
    deployment Deploy_Backdoor;
    environments (all_pc, KAVKIS);
    method Autotest.Kis.Suites.ParentalControl.ParentalControlApplicationTests.StartBlockedApplication;
    Area = @"ParentalControl";
    UniqueId = @"D8923816-2E40-48C8-8B8D-492428488E1D";
    TfsId = 186718;
    Timeout = @"00:15:00";
}

scenario ScreenshotCreateDcUnderSafeBrowser
{
    deployment Deploy_Backdoor;
    environments (all_pc, KAVKIS);
    method Autotest.Kis.Suites.SafeBanking.ScreenshotTests.ScreenshotCreateDcUnderSafeBrowser;
    RevertAgentBefore = true;
    Area = @"SafeBanking";
    UniqueId = @"DE0AF29E-D1CE-49CF-8FD1-5768F05026C9";
    TfsId = 235537;
    Timeout = @"00:15:00";
}

scenario ScreenshotCreateDcUnderUnsafeBrowser
{
    deployment Deploy_Backdoor;
    environments (all_pc, KAVKIS);
    method Autotest.Kis.Suites.SafeBanking.ScreenshotTests.ScreenshotCreateDcUnderUnsafeBrowser;
    Area = @"SafeBanking";
    UniqueId = @"864A98D5-F1E1-45EF-9700-FAFFC2D9995C";
    TfsId = 235537;
    Timeout = @"00:15:00";
}

scenario ScreenshotKeyboardEventUnderUnsafeBrowser
{
    deployment Deploy_Backdoor;
    environments (all_pc, KAVKIS);
    method Autotest.Kis.Suites.SafeBanking.ScreenshotTests.ScreenshotKeyboardEventUnderUnsafeBrowser;
    Area = @"SafeBanking";
    UniqueId = @"66FDE918-0C11-4836-A8CB-7D56E32DCDED";
    TfsId = 235533;
    Timeout = @"00:15:00";
}

scenario StartSafeBankingFirefox
{
    deployment Deploy_Backdoor;
    environments (all_pc, KAVKIS);
    method Autotest.Kis.Suites.SafeBanking.WebAvSafeBankingOpenInNewWindow.StartSafeBankingFirefox;
    Area = @"SafeBanking";
    UniqueId = @"4D555ACD-12DC-4F7B-ABED-01B775A89B07";
    TfsId = 182168;
    Timeout = @"00:15:00";
}

scenario CaptureMetadata
{
    deployment Deploy_Backdoor;
    environments (all_pc__win2012r2, KAVKIS);
    method Autotest.Kis.Suites.Screenshotting.ScreenshottingSmoke.CaptureMetadata;
    RevertAgentAfter = true;
    Area = @"Screenshotting";
    UniqueId = @"19D00403-EDA4-4794-85C1-F2EB74A1BD4A";
    TfsId = 737236;
    Timeout = @"00:15:00";
}

scenario CaptureScreenshot
{
    deployment Deploy_Backdoor;
    environments (all_pc__win2012r2, KAVKIS);
    method Autotest.Kis.Suites.Screenshotting.ScreenshottingSmoke.CaptureScreenshot;
    RevertAgentAfter = true;
    Area = @"Screenshotting";
    UniqueId = @"DD22957F-ACE5-494B-878A-94101F524344";
    TfsId = 737236;
    Timeout = @"00:15:00";
}

scenario SelfDefenceEnabledMoveFiles
{
    deployment Deploy_Backdoor;
    environments (all_pc__win2012r2, KAVKIS);
    method Autotest.Kis.Suites.SelfDefence.SelfDefenceTestsFiles.SelfDefenceEnabledMoveFiles;
    Area = @"SelfDefence";
    UniqueId = @"E81E677B-B7C1-40A1-9EE6-BECD4BBA33FD";
    TfsId = 187685;
    Timeout = @"00:15:00";
}

scenario ProductDisablesPupInCheckboxWhenSccEnabledX86
{
    deployment Deploy_Backdoor;
    environments (win811-x86, KAVKIS);
    method Autotest.Kis.Suites.SysChangeControl.InstallationAssistantPupCheckboxX86Tests.ProductDisablesPupInCheckboxWhenSccEnabledX86;
    Area = @"SysChangeControl";
    UniqueId = @"0FC90012-0FC4-42B0-90B5-AC2789FB3DE2";
    TfsId = 1682717;
    Timeout = @"00:15:00";
}

scenario ProductShowsAlertWhenUserTryingToInstallPupX86
{
    deployment Deploy_Backdoor;
    environments (all_pc, KAVKIS);
    method Autotest.Kis.Suites.SysChangeControl.InstallationAssistantPupButtonX86Tests.ProductShowsAlertWhenUserTryingToInstallPupX86;
    Area = @"SysChangeControl";
    UniqueId = @"425FCB8C-7F97-45DD-AFE7-C92C534A2338";
    TfsId = 1682719;
    Timeout = @"00:15:00";
}

scenario BssStabilityTestMock
{
    deployment Deploy_Backdoor;
    environments (all_pc, KAVKIS);
    method Autotest.Kis.Suites.SystemWatcher.BssStabilityKsnMockTests.BssStabilityTestMock;
    RevertAgentAfter = true;
    RevertAgentBefore = true;
    Area = @"SystemWatcher";
    UniqueId = @"28FFAEC1-4534-45B6-A259-739668BC81D2";
    TfsId = 1879219;
    Timeout = @"00:15:00";
}

scenario ExactBssDetectAutoActionNoRollback
{
    deployment Deploy_Backdoor;
    environments (all_pc__win2012r2, KAVKIS);
    method Autotest.Kis.Suites.SystemWatcher.SystemWatcherTests.ExactBssDetectAutoActionNoRollback;
    Area = @"SystemWatcher";
    UniqueId = @"FB2B8643-0F4A-4C82-861C-A4FCEF7E013C";
    TfsId = 181503;
    Timeout = @"00:15:00";
}

scenario RunUtilityFromUntrustedSourceMock
{
    deployment Deploy_Backdoor;
    environments (all_pc, KAVKIS);
    method Autotest.Kis.Suites.SystemWatcher.SystemWatcherKsnMockTests.RunUtilityFromUntrustedSourceMock;
    RevertAgentAfter = true;
    RevertAgentBefore = true;
    Area = @"SystemWatcher";
    UniqueId = @"B42C8C49-67A7-457F-B23E-C00D5992291A";
    TfsId = 181477;
    Timeout = @"00:15:00";
}

scenario WhitelistDetectAutoActionMock
{
    deployment Deploy_Backdoor;
    environments (all_pc__win2012r2, KAVKIS);
    method Autotest.Kis.Suites.SystemWatcher.SystemWatcherKsnMockTests.WhitelistDetectAutoActionMock;
    RevertAgentAfter = true;
    RevertAgentBefore = true;
    Area = @"SystemWatcher";
    UniqueId = @"D4974C21-6E2E-45E4-B506-1E183A3542EB";
    TfsId = 181512;
    Timeout = @"00:15:00";
}

scenario DistinguishModulesLoads
{
    deployment Deploy_Backdoor;
    environments (all_pc, KAVKIS);
    method Autotest.Kis.Suites.Tam.TamTests.DistinguishModulesLoads;
    RevertAgentAfter = true;
    RevertAgentBefore = true;
    Area = @"Tam";
    UniqueId = @"1215EDD9-B686-40C5-A380-6B590B343B27";
    TfsId = 846251;
    Timeout = @"00:15:00";
}

scenario CheckDetectedThreatsActions
{
    deployment Deploy_Backdoor;
    environments (all_pc, KAVKIS);
    method Autotest.Kis.Suites.ThreatsManager.ThreatsManagerTestsBvtPvt.CheckDetectedThreatsActions;
    Area = @"ThreatsManager";
    UniqueId = @"D2D6A6CE-5DE7-4355-9726-7E50816E2E68";
    TfsId = 187473;
    Timeout = @"00:15:00";
}

scenario IgnoreDetectedThreats
{
    deployment Deploy_Backdoor;
    environments (all_pc, KAVKIS);
    method Autotest.Kis.Suites.ThreatsManager.ThreatsManagerTestsBvtPvt.IgnoreDetectedThreats;
    Area = @"ThreatsManager";
    UniqueId = @"C24A74B9-DBF2-4681-8EF4-E4AB38F394C8";
    TfsId = 184530;
    Timeout = @"00:15:00";
}

scenario RestoreUncurableArchivesFromQuarantine
{
    deployment Deploy_Backdoor;
    environments (all_pc, KAVKIS);
    method Autotest.Kis.Suites.ThreatsManager.QuarantineFixture.RestoreUncurableArchivesFromQuarantine;
    Area = @"ThreatsManager";
    UniqueId = @"1A33A4EB-B769-4DBC-93E9-5D7CFE18ECC0";
    TfsId = 185784;
    Timeout = @"00:15:00";
}

scenario CommercialLicenseChange
{
    deployment Deploy_Backdoor;
    environments (all_pc, KAVKIS);
    method Autotest.Kis.Suites.License.UCPMockTests.UcpLicenseTests.CommercialAfterTrial;
    RevertAgentBefore = true;
    Area = @"UCPMockTests";
    UniqueId = @"EB78DEC4-A5CF-4010-B6A4-57B85999EF66";
    TfsId = 181234;
    Timeout = @"00:15:00";
}

scenario AntiPhishingSearchByLinkSmoke
{
    deployment Deploy_Backdoor;
    environments (all_pc__win2012r2, KAVKIS);
    method Autotest.Kis.Suites.WebAv.WebAvCommonTests.AntiPhishingSearchByLinkSmoke;
    RevertAgentAfter = true;
    RequireInternet = true;
    Area = @"WebAv";
    UniqueId = @"BAB44989-98DC-4A38-BAA8-75870BE4A894";
    TfsId = 187941;
    Timeout = @"00:10:00";
}

scenario CheckIconOnExternalUrl
{
    deployment Deploy_Backdoor;
    environments (all_pc, KAVKIS);
    method Autotest.Kis.Suites.WebAv.WebAvUrlAdvisorTests.CheckIconOnExternalUrl;
    RequireInternet = true;
    Area = @"WebAv";
    UniqueId = @"7179E53F-F7A6-445A-BC2B-365C8097D553";
    TfsId = 183954;
    Timeout = @"00:10:00";
}

scenario HttpDetectEicarFileLessThan1MbBlock
{
    deployment Deploy_Backdoor;
    environments (all_pc__win2012r2, KAVKIS);
    method Autotest.Kis.Suites.WebAv.WebAvCommonTests.HttpDetectEicarFileLessThan1MbBlock;
    RevertAgentAfter = true;
    RequireInternet = true;
    Area = @"WebAv";
    UniqueId = @"77D890BD-593D-4ADD-9AF6-C516027095AE";
    TfsId = 182884;
    Timeout = @"00:10:00";
}

scenario WmufSearchByHashSmoke
{
    deployment Deploy_Backdoor;
    environments (all_pc__win2012r2, KAVKIS);
    method Autotest.Kis.Suites.WebAv.WebAvCommonTests.WmufSearchByHashSmoke;
    RevertAgentAfter = true;
    RequireInternet = true;
    Area = @"WebAv";
    UniqueId = @"C5C953A8-7F4F-41B1-8FEE-D220F34B7FED";
    TfsId = 183836;
    Timeout = @"00:10:00";
}

scenario DetectionOnDemandScanHeuristicAnalysisMedium
{
    deployment Deploy_Backdoor;
    environments (all_pc, KAVKIS);
    method Autotest.Kis.Suites.Avs.ScanHeuristicAnalysisTests.DetectionOnDemandScanHeuristicAnalysisMedium;
    Area = @"Avs";
    UniqueId = @"7DAA02C9-814A-4670-879A-F5C55A4946DC";
    TfsId = 187917;
    Timeout = @"00:15:00";
}

scenario WindowsConfigProblemFix
{
    deployment Deploy_Backdoor;
    environments (all_pc, KAVKIS);
    method Autotest.Kis.Suites.AVZ.AvzWindowsConfigTests.WindowsConfigProblemFix;
    Area = @"AVZ";
    UniqueId = @"DBA2CD3F-4487-492A-9DA5-503D0838E35B";
    TfsId = 186314;
    Timeout = @"00:15:00";
}

scenario BackupAllFilesFromMyDocumentsAndDesktop
{
    deployment Deploy_Backdoor;
    environments (all_pc, KAVKIS);
    method Autotest.Kis.Suites.Backup.BackupMyDocumentsAndDesktopTests.BackupAllFilesFromMyDocumentsAndDesktop;
    Area = @"Backup";
    UniqueId = @"59BFF7EF-EBFE-4A13-AC00-BBBE7ABE8CF1";
    TfsId = 1042345;
    Timeout = @"00:15:00";
}

scenario VaultCreationAndPasswordChanging
{
    deployment Deploy_Backdoor;
    environments (all_pc__win2012r2, KAVKIS);
    method Autotest.Kis.Suites.Encryption.EncryptionPasswordChanging.VaultCreationAndPasswordChanging;
    Area = @"Encryption";
    UniqueId = @"E540787C-4767-4916-A520-EB2E3A73C62B";
    TfsId = 1058553;
    Timeout = @"00:15:00";
}

scenario ShredFileQuick
{
    deployment Deploy_Backdoor;
    environments (all_pc__win2012r2, KAVKIS);
    method Autotest.Kis.Suites.FileShredder.FileShredderTests.ShredFileQuick;
    Area = @"FileShredder";
    UniqueId = @"4DA1A1A1-9C55-47D1-AC74-7464552D972F";
    TfsId = 1065393;
    Timeout = @"00:15:00";
}

scenario CheckBannedComputerList
{
    deployment Deploy_Backdoor;
    environments (all_pc, KAVKIS);
    method Autotest.Kis.Suites.Firewall.IntrusionDetectionSystem.CheckBannedComputerList;
    Area = @"Firewall";
    UniqueId = @"F90AED43-B9DC-4508-9EA1-B4A396C457C1";
    TfsId = 187374;
    Timeout = @"00:15:00";
}

scenario EnableProtection
{
    deployment Deploy_Backdoor;
    environments (all_pc, KAVKIS);
    method Autotest.Kis.Suites.GUI.ProblemListTests.EnableProtection;
    Area = @"GUI";
    UniqueId = @"FE4C1475-F4E4-4E38-A63F-1B21FCA338F3";
    TfsId = 187597;
    RevertAgentAfter = true;
    Timeout = @"00:15:00";
}

scenario CreateFiles
{
    deployment Deploy_Backdoor;
    environments (all_pc__win2012r2, KAVKIS);
    method Autotest.Kis.Suites.Hips.HipsCreateFilesTests.CreateFiles;
    Area = @"Hips";
    UniqueId = @"33399D59-A145-4788-B036-EC27C4F95AE2";
    TfsId = 186453;
    RevertAgentAfter = true;
    RevertAgentBefore = true;
    Timeout = @"00:15:00";
}

scenario StartOtherProcessSmoke
{
    deployment Deploy_Backdoor;
    environments (all_pc__win2012r2, KAVKIS);
    method Autotest.Kis.Suites.Hips.HipsTestsProcessInteraction.StartOtherProcessSmoke;
    Area = @"Hips";
    UniqueId = @"581370DA-8DB5-42BE-8397-94B08E809FE8";
    TfsId = 186940;
    RevertAgentBefore = true;
    Timeout = @"00:15:00";
}

scenario CheckRetrievePhishing
{
    deployment Deploy_Backdoor;
    environments (all_pc, KAVKIS);
    method Autotest.Kis.Suites.Imav.ImavTests.CheckRetrievePhishing;
    Area = @"Imav";
    UniqueId = @"B39E654C-CE2B-4AB6-8E3A-89E6D31EB11F";
    TfsId = 183765;
    RevertAgentAfter = true;
    NeedUnsignedAgent = true;
    Timeout = @"00:15:00";
}

scenario CheckAvpDumps
{
    deployment Deploy_Backdoor;
    environments (all_pc__win2012r2, KAVKIS);
    method Autotest.Kis.Suites.Installation.InstallationSecondPartTests.CheckAvpDumps;
    Area = @"Installation";
    UniqueId = @"F63603DE-0BEE-440B-B0D8-E26D34640338";
    TfsId = 241237;
    Timeout = @"00:15:00";
}

scenario CheckAvpProcesses
{
    deployment Deploy_Backdoor;
    environments (all_pc__win2012r2, KAVKIS);
    method Autotest.Kis.Suites.Installation.InstallationTests.CheckAvpProcesses;
    Area = @"Installation";
    UniqueId = @"44E3B89A-9E88-43D3-8CEC-C0CCCE0BD143";
    TfsId = 814554;
    Timeout = @"00:15:00";
}

scenario CheckComponentsStatus
{
    deployment Deploy_Backdoor;
    environments (all_pc__win2012r2, KAVKIS);
    method Autotest.Kis.Suites.Installation.InstallationSecondPartTests.CheckComponentsStatus;
    Area = @"Installation";
    UniqueId = @"186CC1FC-A663-4589-9E8B-CFBB0F373AB1";
    TfsId = 241245;
    RevertAgentAfter = true;
    RevertAgentBefore = true;
    Timeout = @"00:15:00";
}

scenario CheckFilesAndFoldersExists
{
    deployment Deploy_Backdoor;
    environments (all_pc__win2012r2, KAVKIS);
    method Autotest.Kis.Suites.Installation.InstallationSecondPartTests.CheckFilesAndFoldersExists;
    Area = @"Installation";
    UniqueId = @"FEA5AF30-D0DC-4ED8-850E-8E568DE19367";
    TfsId = 186770;
    Timeout = @"00:15:00";
}

scenario CheckNdisFilter
{
    deployment Deploy_Backdoor;
    environments (all_pc__win2012r2, KAVKIS);
    method Autotest.Kis.Suites.Installation.InstallationTests.CheckNdisFilter;
    Area = @"Installation";
    UniqueId = @"062CFC64-0C23-4194-96F0-548A7020E13A";
    TfsId = 814562;
    RevertAgentAfter = true;
    Timeout = @"00:15:00";
}

scenario CheckRegistryKeysExists
{
    deployment Deploy_Backdoor;
    environments (all_pc__win2012r2, KAVKIS);
    method Autotest.Kis.Suites.Installation.InstallationSecondPartTests.CheckRegistryKeysExists;
    Area = @"Installation";
    UniqueId = @"4C3C0781-37F2-48FC-9B48-F2DB2B6DF247";
    TfsId = 186576;
    Timeout = @"00:15:00";
}

scenario CheckStartAndStopProduct
{
    deployment Deploy_Backdoor;
    environments (all_pc__win2012r2, KAVKIS);
    method Autotest.Kis.Suites.Installation.InstallationSecondPartTests.CheckStartAndStopProduct;
    Area = @"Installation";
    UniqueId = @"F5A9A511-1FEA-4835-85F8-51E1FDE31A31";
    TfsId = 180698;
    Timeout = @"00:15:00";
}

scenario CheckTraceWriting
{
    deployment Deploy_Backdoor;
    environments (all_pc__win2012r2, KAVKIS);
    method Autotest.Kis.Suites.Installation.InstallationSecondPartTests.CheckTraceWriting;
    Area = @"Installation";
    UniqueId = @"D3641601-6852-48A9-AA2D-21EA9F4E47D9";
    TfsId = 241239;
    Timeout = @"00:15:00";
}

scenario UninstallProductWithReboot
{
    deployment Deploy_Backdoor;
    environments (all_pc__win2012r2, KAVKIS);
    method Autotest.Kis.Suites.Installation.UninstallationTests.UninstallProductWithReboot;
    AllowReboot = true;
    Area = @"Installation";
    UniqueId = @"EE4ECA0C-7BC9-4ECD-868A-968DD8687064";
    TfsId = 241267;
    RevertAgentAfter = true;
    Timeout = @"00:15:00";
}

scenario IpmWithActivation
{
    deployment Deploy_Backdoor;
    environments (all_pc, KSOS__PURE__PURE_Webpack);
    method Autotest.Kis.Suites.Ipm.IpmSmokeTests.IpmWithActivation;
    Area = @"Ipm";
    UniqueId = @"1060FD55-6134-4E45-899F-5A580E8798FD";
    TfsId = 182043;
    RevertAgentBefore = true;
    Timeout = @"00:10:00";
}

scenario UpdateFromLocalFolder
{
    deployment Deploy_Backdoor;
    environments (all_pc, KAVKIS);
    method Autotest.Kis.Suites.KashellSuite.KashellUpdateTests.UpdateFromLocalFolder;
    Area = @"KashellSuite";
    UniqueId = @"C71E2BC2-F5ED-43D9-BB3E-7DAF2DC97673";
    TfsId = 2206798;
    RevertAgentAfter = true;
    Timeout = @"00:15:00";
}

scenario ChangeStateFileAntivirusMock
{
    deployment Deploy_Backdoor;
    environments (all_pc, KAVKIS);
    method Autotest.Kis.Suites.ManagementConsole.ManagementConsoleProtectionComponentsMockTests.ChangeStateFileAntivirusMock;
    Area = @"ManagementConsole";
    UniqueId = @"C24B2BB2-40BF-4B9A-9D97-CB09A6494F6F";
    TfsId = 879655;
    RevertAgentAfter = true;
    RevertAgentBefore = true;
    Timeout = @"00:15:00";
}

scenario InteractiveActionMixed
{
    deployment Deploy_Backdoor;
    environments (all_pc, KAVKIS);
    method Autotest.Kis.Suites.Oas.OasTestsActionCheck.InteractiveActionMixed;
    Area = @"Oas";
    UniqueId = @"C8DF6664-B354-4FFB-A42B-AA266B209CD5";
    TfsId = 186001;
    Timeout = @"01:00:00";
}

scenario ScanByFormat
{
    deployment Deploy_Backdoor_Without_AppVerifier;
    environments (all_pc__win2012r2, KAVKIS);
    method Autotest.Kis.Suites.Oas.OasTestsSecondPart.ScanByFormat;
    Area = @"Oas";
    UniqueId = @"8F7E9648-B047-4FD1-9E61-355688828163";
    TfsId = 187454;
    Timeout = @"00:30:00";
}

scenario ScanEmailObjectsSignature
{
    deployment Deploy_Backdoor;
    environments (all_pc, KAVKIS);
    method Autotest.Kis.Suites.Ods.KashellScanEmailObjectsTests.ScanEmailObjectsSignature;
    Area = @"Ods";
    UniqueId = @"4999ECEC-F1CD-4B02-9E0A-601F57DDE0E0";
    TfsId = 2206641;
    RevertAgentAfter = true;
    Timeout = @"00:15:00";
}

scenario ScanVulnerabilityClear
{
    deployment Deploy_Backdoor;
    environments (all_pc, KAVKIS);
    method Autotest.Kis.Suites.Ods.KashellScanVulnerabilityTests.ScanVulnerabilityClear;
    Area = @"Ods";
    UniqueId = @"391C869F-32E1-43D7-BAAB-FDFE0442D13C";
    TfsId = 2206599;
    RevertAgentAfter = true;
    Timeout = @"00:15:00";
}

scenario EnableParentalControl
{
    deployment Deploy_Backdoor;
    environments (all_pc, KAVKIS);
    method Autotest.Kis.Suites.ParentalControl.ParentalControlTests.EnableParentalControl;
    Area = @"ParentalControl";
    UniqueId = @"F76463EC-78FF-460F-AF4A-607DFC721B35";
    TfsId = 186737;
    Timeout = @"00:15:00";
}

scenario ScreenshotKeyboardEventUnderSafeBrowser
{
    deployment Deploy_Backdoor;
    environments (win7-x64__win811-x86, KAVKIS);
    method Autotest.Kis.Suites.SafeBanking.ScreenshotTests.ScreenshotKeyboardEventUnderSafeBrowser;
    Area = @"SafeBanking";
    UniqueId = @"7958499D-2687-4A2F-A0A9-00A5AD4DD9B4";
    TfsId = 235533;
    RevertAgentBefore = true;
    Timeout = @"00:15:00";
}

scenario StartSafeBrowsingFromProduct
{
    deployment Deploy_Backdoor;
    environments (all_pc, KAVKIS);
    method Autotest.Kis.Suites.SafeBanking.WebAvSafeBankingTests.StartSafeBrowsingFromProduct;
    Area = @"SafeBanking";
    UniqueId = @"CA194858-D0B8-4CBE-80F5-97BA32A8EA79";
    TfsId = 182165;
    Timeout = @"00:15:00";
}

scenario SelfDefenceDisabledMoveFiles
{
    deployment Deploy_Backdoor;
    environments (all_pc__win2012r2, KAVKIS);
    method Autotest.Kis.Suites.SelfDefence.SelfDefenceTestsFiles.SelfDefenceDisabledMoveFiles;
    Area = @"SelfDefence";
    UniqueId = @"68B3E6EE-D416-4A6D-833B-615348783924";
    TfsId = 187417;
    Timeout = @"00:15:00";
}

scenario SelfDefenceEnabledKillGuiService
{
    deployment Deploy_Backdoor;
    environments (all_pc__win2012r2, KAVKIS);
    method Autotest.Kis.Suites.SelfDefence.SelfDefenceEnableTestsService.SelfDefenceEnabledKillGuiService;
    Area = @"SelfDefence";
    UniqueId = @"A21D04EF-89D9-4B2C-B1B8-18E29816B751";
    TfsId = 187686;
    RevertAgentAfter = true;
    Timeout = @"00:15:00";
}

scenario SystemRestart
{
    deployment Deploy_Backdoor;
    environments (all_pc__win2012r2, KAVKIS);
    method Autotest.Kis.Suites.Stress.SystemRestartStressTests.SystemRestart;
    AllowReboot = true;
    Area = @"Stress";
    UniqueId = @"49374E76-AB0B-4A9D-AD6D-BB5E33B38080";
    TfsId = 790602;
    Timeout = @"00:15:00";
}

scenario ProcessLaunchingDetectWithOnlySw
{
    deployment Deploy_Backdoor;
    environments (all_pc, KAVKIS);
    method Autotest.Kis.Suites.SystemWatcher.SystemWatcherTests.ProcessLaunchingDetectWithOnlySw;
    Area = @"SystemWatcher";
    UniqueId = @"A34569D6-AF65-436B-9212-C31871A43181";
    TfsId = 181488;
    Timeout = @"00:15:00";
}

scenario InventoryOfDifferentFileFormats
{
    deployment Deploy_Backdoor;
    environments (all_pc, KAVKIS);
    method Autotest.Kis.Suites.Tam.TamTests.InventoryOfDifferentFileFormats;
    Area = @"Tam";
    UniqueId = @"3A2CF8B5-E60F-47C6-B6CE-9487D2DB1DBD";
    TfsId = 301486;
    RevertAgentBefore = true;
    Timeout = @"00:15:00";
}

scenario RestoreSuspiciousArchivesFromQuarantine
{
    deployment Deploy_Backdoor;
    environments (all_pc, KAVKIS);
    method Autotest.Kis.Suites.ThreatsManager.QuarantineFixture.RestoreSuspiciousArchivesFromQuarantine;
    Area = @"ThreatsManager";
    UniqueId = @"D94617CA-0FD5-4DC1-B67D-964DA20D32B5";
    TfsId = 185784;
    Timeout = @"00:15:00";
}

scenario ManagementConsole
{
    deployment Deploy_Backdoor;
    environments (all_pc, KAVKIS);
    method Autotest.Kis.Suites.UCP.UCPMockTests.UcpCommonTests.ManagementConsole;
    Area = @"UCPMockTests";
    UniqueId = @"545CE1D2-8394-42F3-B621-35568588DC96";
    TfsId = 894109;
    RevertAgentAfter = true;
    RevertAgentBefore = true;
    Timeout = @"00:15:00";
}

scenario InteractiveProtection
{
    deployment Deploy_Backdoor;
    environments (all_pc__win2012r2, KAVKIS);
    method Autotest.Kis.Suites.GUI.InteractiveProtectionTests.InteractiveProtection;
    Area = @"GUI";
    UniqueId = @"AF2D63E4-5A94-4D05-B376-B0DEBC3CC25F";
    TfsId = 185121;
    RevertAgentAfter = true;
    Timeout = @"00:15:00";
}

scenario VerifyDetection
{
    deployment Deploy_Backdoor;
    environments (all_pc__win2012r2, KAVKIS);
    method Autotest.Kis.Suites.Ods.OdsTests.VerifyDetection;
    Area = @"Ods";
    UniqueId = @"1D0ED9C7-F70C-4E08-BC46-97A4AC9A7B3D";
    TfsId = 187930;
    Timeout = @"00:15:00";
}

scenario BlockGooglePlus
{
    deployment Deploy_Backdoor;
    environments (all_pc, KAVKIS);
    method Autotest.Kis.Suites.Dnt.BlockSocialNetworks.BlockGooglePlus;
    Area = @"Dnt";
    UniqueId = @"E8DC00CD-72FB-429A-9001-85898EE6CE83";
    TfsId = 1075086;
    Timeout = @"00:15:00";
}

scenario RunCiVisualTests
{
    deployment Deploy_Visual;
    environments (win7-x64, KAVKIS);
    method Autotest.Kis.Suites.Visual.VisualTests.RunCiVisualTests;
    Area = @"Visual";
    UniqueId = @"2BA143A2-7CCA-49B3-86D2-4A8A5120ED19";
    TfsId = 3019601;
    Timeout = @"00:15:00";
}

scenario RunSmokeVisualTests
{
    deployment Deploy_Visual;
    environments (all_pc, KAVKIS);
    method Autotest.Kis.Suites.Visual.VisualTests.RunSmokeVisualTests;
    Area = @"Visual";
    UniqueId = @"B11440C6-3EA9-4B23-A345-2E2A1CD580E0";
    TfsId = 3019601;
    Timeout = @"00:15:00";
}

scenario ExitProductFromTray
{
    deployment Deploy_KSDE;
    environments (w10rs4-x64__win7-x64__win811-x86, KSDE);
    method Autotest.Ksde.Suites.Gui.GuiTests.ExitProductFromTray;
    Area = @"Gui";
    UniqueId = @"D72A6E34-F928-406A-BF9B-25AB9358821A";
    TfsId = 1935131;
    Timeout = @"00:15:00";
}

scenario OpenMainWindowFromTray
{
    deployment Deploy_KSDE;
    environments (w10rs4-x64__win7-x64__win811-x86, KSDE);
    method Autotest.Ksde.Suites.Gui.GuiTests.OpenMainWindowFromTray;
    Area = @"Gui";
    UniqueId = @"C3D13378-F1EF-44C1-8641-71DCF2B9622D";
    TfsId = 1935130;
    Timeout = @"00:15:00";
}

scenario CheckDownloaderFileSize_KSDE
{
    deployment Deploy_KSDE;
    environments (w10rs4-x64__win7-x64__win811-x86, KSDE);
    method Autotest.Ksde.Suites.Installation.DownloaderSizeTests.CheckDownloaderFileSize;
    Area = @"Installation";
    UniqueId = @"D560243B-D537-4AF2-801F-C7E2A0479337";
    TfsId = 1698119;
    Timeout = @"00:15:00";
}

scenario CheckDumps
{
    deployment Deploy_KSDE;
    environments (w10rs4-x64__win7-x64__win811-x86, KSDE);
    method Autotest.Ksde.Suites.Installation.InstallationTests.CheckDumps;
    Area = @"Installation";
    UniqueId = @"06C825BB-DB2D-4B31-A1E3-F60A8E31C2B8";
    TfsId = 1582284;
    Timeout = @"00:15:00";
}

scenario CheckInstallationGui_KSDE
{
    deployment Deploy_NoInstall;
    environments (w10rs4-x64__win7-x64__win811-x86, KSDE);
    method Autotest.Ksde.Suites.Installation.InstallationTests.CheckInstallationGui;
    Area = @"Installation";
    UniqueId = @"C98214FB-B928-42D0-9119-55734F09A983";
    TfsId = 1582253;
    RevertAgentAfter = true;
    Timeout = @"00:15:00";
}

scenario CheckProcess
{
    deployment Deploy_KSDE;
    environments (w10rs4-x64__win7-x64__win811-x86, KSDE);
    method Autotest.Ksde.Suites.Installation.InstallationTests.CheckProcess;
    Area = @"Installation";
    UniqueId = @"E8D1D399-1BC3-4D21-9B4B-E7B187EF5E8C";
    TfsId = 1582280;
    Timeout = @"00:15:00";
}

scenario CheckProductFilesAndFolders
{
    deployment Deploy_KSDE;
    environments (w10rs4-x64__win7-x64__win811-x86, KSDE);
    method Autotest.Ksde.Suites.Installation.InstallationTests.CheckProductFilesAndFolders;
    Area = @"Installation";
    UniqueId = @"E41AFE92-396A-4627-82A5-BA4C73268033";
    TfsId = 1582408;
    Timeout = @"00:15:00";
}

scenario CheckProductRegistry
{
    deployment Deploy_KSDE;
    environments (w10rs4-x64__win7-x64__win811-x86, KSDE);
    method Autotest.Ksde.Suites.Installation.InstallationTests.CheckProductRegistry;
    Area = @"Installation";
    UniqueId = @"7637BEEF-E818-4824-8478-C860B81A44D5";
    TfsId = 1583119;
    Timeout = @"00:15:00";
}

scenario CheckServiceState
{
    deployment Deploy_KSDE;
    environments (w10rs4-x64__win7-x64__win811-x86, KSDE);
    method Autotest.Ksde.Suites.Installation.InstallationTests.CheckServiceState;
    Area = @"Installation";
    UniqueId = @"F633D57E-A193-4314-9AE8-07E3BFF9FC6F";
    TfsId = 1582268;
    RevertAgentBefore = true;
    Timeout = @"00:15:00";
}

scenario CheckShortcuts
{
    deployment Deploy_KSDE;
    environments (w10rs4-x64__win7-x64__win811-x86, KSDE);
    method Autotest.Ksde.Suites.Installation.InstallationTests.CheckShortcuts;
    Area = @"Installation";
    UniqueId = @"D269B89B-CE80-43B3-8920-BE9630692925";
    TfsId = 1582273;
    Timeout = @"00:15:00";
}

scenario CheckSilentMode
{
    deployment Deploy_KSDE;
    environments (w10rs4-x64__win7-x64__win811-x86, KSDE);
    method Autotest.Ksde.Suites.Installation.InstallationTests.CheckSilentMode;
    Area = @"Installation";
    UniqueId = @"8A677A2E-7FFA-46C8-B829-9DBB08149C80";
    TfsId = 1583270;
    Timeout = @"00:15:00";
}

scenario CheckStartStopProcess
{
    deployment Deploy_KSDE;
    environments (w10rs4-x64__win7-x64__win811-x86, KSDE);
    method Autotest.Ksde.Suites.Installation.InstallationTests.CheckStartStopProcess;
    Area = @"Installation";
    UniqueId = @"CFDD83E0-570A-40D7-8893-06A148D66AA3";
    TfsId = 1582290;
    Timeout = @"00:15:00";
}

scenario CheckTraces
{
    deployment Deploy_KSDE;
    environments (w10rs4-x64__win7-x64__win811-x86, KSDE);
    method Autotest.Ksde.Suites.Installation.InstallationTests.CheckTraces;
    Area = @"Installation";
    UniqueId = @"95FCFC15-5F76-40E8-BF69-928F27BE6217";
    TfsId = 1582275;
    Timeout = @"00:15:00";
}

scenario UninstallProductWithReboot_KSDE
{
    deployment Deploy_KSDE;
    environments (w10rs4-x64__win7-x64__win811-x86, KSDE);
    method Autotest.Ksde.Suites.Installation.UninstallationTests.UninstallProductWithReboot;
    AllowReboot = true;
    Area = @"Installation";
    UniqueId = @"65F6712D-BAAA-4D74-A2D5-400062ABF8E8";
    TfsId = 1582304;
    RevertAgentAfter = true;
    Timeout = @"00:15:00";
}

scenario RunCiVisualTests_KSDE
{
    deployment Deploy_Visual;
    environments (w10rs4-x64__win7-x64__win811-x86, KSDE);
    method Autotest.Ksde.Suites.Visual.VisualTests.RunCiVisualTests;
    Area = @"Visual";
    UniqueId = @"C89A6C28-958D-4DD0-B58A-0FFD73025DAB";
    TfsId = 737236;
    Timeout = @"00:15:00";
}

scenario RunSmokeVisualTests_KSDE
{
    deployment Deploy_Visual;
    environments (w10rs4-x64__win7-x64__win811-x86, KSDE);
    method Autotest.Ksde.Suites.Visual.VisualTests.RunSmokeVisualTests;
    Area = @"Visual";
    UniqueId = @"5E15629F-265D-4F65-9980-AFD0044C7C77";
    TfsId = 737236;
    Timeout = @"00:15:00";
}

scenario UpdateFromLocalFolder_KSDE
{
    deployment Deploy_KSDE;
    environments (w10rs4-x64__win7-x64__win811-x86, KSDE);
    method Autotest.Ksde.Suites.KashellSuite.KashellUpdateTests.UpdateFromLocalFolder;
    Area = @"KashellSuite";
    UniqueId = @"8EF18634-F318-4051-95E5-FE04C65937BE";
    TfsId = 2206798;
    Timeout = @"00:15:00";
}

scenario GateTests_KFA =
    CheckAvpDumps,
    CheckAvpProcesses,
    CheckComponentsStatus,
    CheckFilesAndFoldersExists,
    CheckNdisFilter,
    CheckRegistryKeysExists,
    CheckStartAndStopProduct,
    CheckTraceWriting;

scenario GateTests_SAAS =
    CheckAvpDumps,
    CheckAvpProcesses,
    CheckFilesAndFoldersExists,
    CheckNdisFilter,
    CheckRegistryKeysExists,
    CheckStartAndStopProduct,
    CheckTraceWriting;

scenario GateTests_KSDE =
    CheckDumps,
    CheckProcess,
    CheckProductFilesAndFolders,
    CheckProductRegistry,
    CheckServiceState,
    CheckSilentMode,
    CheckStartStopProcess,
    CheckTraces,
    UninstallProductWithReboot_KSDE,
    RunCiVisualTests_KSDE;

scenario GateTests_KSOS_FS =
    TryDisinfectWithoutRestart,
    VaultCreationAndPasswordChanging,
    InteractiveProtection,
    CreateFiles,
    StartOtherProcessSmoke,
    CheckAvpDumps,
    CheckAvpProcesses,
    CheckComponentsStatus,
    CheckFilesAndFoldersExists,
    CheckNdisFilter,
    CheckRegistryKeysExists,
    CheckStartAndStopProduct,
    CheckTraceWriting,
    UninstallProductWithReboot,
    VerifyDetection,
    SelfDefenceDisabledMoveFiles,
    SelfDefenceEnabledKillGuiService;

scenario GateTests_PURE =
    TryDisinfectWithoutRestart,
    CheckBlockBannerByUrl,
    DetectionOnDemandScanHeuristicAnalysisMedium,
    WindowsConfigProblemFix,
    BackupAllFilesFromMyDocumentsAndDesktop,
    VaultCreationAndPasswordChanging,
    ShredFileQuick,
    CheckBannedComputerList,
    EnableProtection,
    CreateFiles,
    StartOtherProcessSmoke,
    CheckRetrievePhishing,
    CheckAvpDumps,
    CheckAvpProcesses,
    CheckComponentsStatus,
    CheckFilesAndFoldersExists,
    CheckNdisFilter,
    CheckRegistryKeysExists,
    CheckStartAndStopProduct,
    CheckTraceWriting,
    UninstallProductWithReboot,
    IpmWithActivation,
    UpdateFromLocalFolder,
    ChangeStateFileAntivirusMock,
    InteractiveActionMixed,
    ScanByFormat,
    ScanEmailObjectsSignature,
    ScanVulnerabilityClear,
    EnableParentalControl,
    ScreenshotKeyboardEventUnderSafeBrowser,
    StartSafeBrowsingFromProduct,
    SelfDefenceDisabledMoveFiles,
    SelfDefenceEnabledKillGuiService,
    SystemRestart,
    ProcessLaunchingDetectWithOnlySw,
    InventoryOfDifferentFileFormats,
    RestoreSuspiciousArchivesFromQuarantine,
    ManagementConsole,
    RunCiVisualTests,
    BlockGooglePlus;

scenario SmokeTests_PURE =
    TryDisinfectWithoutRestart,
    CheckBlockBannerByUrl,
    CheckBlockingBannerOnHttps,
    CheckBlockingBannersFromWhiteList,
    CheckBlockingBlackBannersOnWhitePage,
    AntiPhishingAndKsnCombinedWmufTestMock,
    CheckCombinedOperationAntiFishingMessage,
    CheckCombinedOperationAntiFishingVirus,
    CheckCombinedOperationAntiFishingWmuf,
    TrafficMonitorEnableDisableEicarHamTest,
    TrafficMonitorEnableDisableEicarProbableSpamTest,
    TrafficMonitorEnableDisableEicarSpamTest,
    DetectionDependingOnEmulationLevelScanFilesMedium,
    DetectionOnDemandScanHeuristicAnalysisMedium,
    HeuristicAnalysisHigh,
    SupportSystemReportAssistance,
    WindowsConfigProblemFix,
    BackupAllFilesFromMyDocumentsAndDesktop,
    DeleteLocalStorageTest,
    DeleteTaskWithDataFromLocalStorage,
    DeleteTaskWithoutDataFromLocalStorage,
    BlockAnalytics,
    BlockFacebook,
    BlockGooglePlus,
    BlockTwitter,
    CheckCreateDump,
    CheckSendingDumpOnOneFtpServerTest,
    DetectAndDeleteThreatsFromVault,
    VaultCreationAndPasswordChanging,
    ShredFileInUse,
    ShredFileQuick,
    ShredFolderWithFileInUse,
    ShredNonAccessibleFiles,
    ShredNonExistentFiles,
    ShredProgramFiles,
    ShredSystemFile,
    AppRuleTcpIpv4BlockedRemoteHostNotInList,
    CheckBannedComputerList,
    CheckIdsForTcpIpV4,
    CheckSilentDetectForTcpIpV4,
    HighRestrictedGroupOutcomingIcmpIpv4Blocked,
    PriorityOfNetworkPackageRulesAllow,
    PriorityOfNetworkPackageRulesBlock,
    CheckLocalizationFullyTranslated,
    EnableProtection,
    InteractiveProtection,
    SomeComponentsAreDisabled,
    CreateFiles,
    DefaultRightForStartProcess,
    HipsObjectsProcessing,
    ProcessStartBlocked,
    ScanKlCategoriesCategorizedObject,
    ScanKlCategoriesUncategorizedObject,
    CheckRetrievePhishing,
    CheckRetrieveWmuf,
    CheckSendPhishing,
    CheckSendWmuf,
    CheckAdditionalFilesAndFoldersExists,
    CheckAdditionalRegistryKeysExists,
    CheckAvpDumps,
    CheckAvpProcesses,
    CheckComponentsStatus,
    CheckDownloaderFileSize,
    CheckFilesAndFoldersExists,
    CheckImportOfExportedSettings,
    CheckInstallationGui,
    CheckNdisFilter,
    CheckRegistryKeysExists,
    CheckStartAndStopProduct,
    CheckTraceWriting,
    UninstallProductWithReboot,
    ImportMaxSettingsFromOlderVersionsKts,
    ImportMinSettingsFromOlderVersionsKts,
    ImportOffSettingsFromOlderVersionsKts,
    IpmWithActivation,
    UpdateFromLocalFolder,
    KsnOdsEicarSmoke,
    ActivateCommercialSmoke,
    ActivateTrialSmoke,
    ActivateCommercial,
    RepeatActualTrialActivation,
    DetectAllTypesOfBodyEicar,
    DetectAllTypesOfEicar,
    ChangeStateFileAntivirusMock,
    SendInfoApplicationControlMock,
    ActionNoSuspicious,
    DetectWithUnpackingLargeCompound,
    DetectWithoutUnpackingLargeCompound,
    InteractiveActionMixed,
    ScanByFormat,
    ScanFilesByExtension,
    ScanEmailObjectsHeuristic,
    ScanEmailObjectsSignature,
    ScanVulnerabilityAllDetection,
    ScanVulnerabilityClear,
    ScanVulnerabilityPartialDetection,
    VerifyDetection,
    BadWordsInMetaDescriptionViaInternetExplorer,
    EnableParentalControl,
    StartApplicationFromWhiteList,
    StartBlockedApplication,
    ScreenshotCreateDcUnderSafeBrowser,
    ScreenshotCreateDcUnderUnsafeBrowser,
    ScreenshotKeyboardEventUnderSafeBrowser,
    ScreenshotKeyboardEventUnderUnsafeBrowser,
    StartSafeBankingFirefox,
    StartSafeBrowsingFromProduct,
    CaptureMetadata,
    CaptureScreenshot,
    SelfDefenceDisabledMoveFiles,
    SelfDefenceEnabledKillGuiService,
    SelfDefenceEnabledMoveFiles,
    SystemRestart,
    ProductDisablesPupInCheckboxWhenSccEnabledX86,
    ProductShowsAlertWhenUserTryingToInstallPupX86,
    BssStabilityTestMock,
    ExactBssDetectAutoActionNoRollback,
    ProcessLaunchingDetectWithOnlySw,
    RunUtilityFromUntrustedSourceMock,
    WhitelistDetectAutoActionMock,
    DistinguishModulesLoads,
    InventoryOfDifferentFileFormats,
    CheckDetectedThreatsActions,
    IgnoreDetectedThreats,
    RestoreSuspiciousArchivesFromQuarantine,
    RestoreUncurableArchivesFromQuarantine,
    CommercialLicenseChange,
    ManagementConsole,
    AntiPhishingSearchByLinkSmoke,
    CheckIconOnExternalUrl,
    HttpDetectEicarFileLessThan1MbBlock,
    WmufSearchByHashSmoke;

scenario SmokeWebpackTests_PURE =
    TryDisinfectWithoutRestart,
    CheckBlockBannerByUrl,
    CheckBlockingBannerOnHttps,
    CheckBlockingBannersFromWhiteList,
    CheckBlockingBlackBannersOnWhitePage,
    AntiPhishingAndKsnCombinedWmufTestMock,
    CheckCombinedOperationAntiFishingMessage,
    CheckCombinedOperationAntiFishingVirus,
    CheckCombinedOperationAntiFishingWmuf,
    TrafficMonitorEnableDisableEicarHamTest,
    TrafficMonitorEnableDisableEicarProbableSpamTest,
    TrafficMonitorEnableDisableEicarSpamTest,
    DetectionDependingOnEmulationLevelScanFilesMedium,
    DetectionOnDemandScanHeuristicAnalysisMedium,
    HeuristicAnalysisHigh,
    SupportSystemReportAssistance,
    WindowsConfigProblemFix,
    BackupAllFilesFromMyDocumentsAndDesktop,
    DeleteLocalStorageTest,
    DeleteTaskWithDataFromLocalStorage,
    DeleteTaskWithoutDataFromLocalStorage,
    BlockAnalytics,
    BlockFacebook,
    BlockGooglePlus,
    BlockTwitter,
    CheckCreateDump,
    CheckSendingDumpOnOneFtpServerTest,
    DetectAndDeleteThreatsFromVault,
    VaultCreationAndPasswordChanging,
    ShredFileInUse,
    ShredFileQuick,
    ShredFolderWithFileInUse,
    ShredNonAccessibleFiles,
    ShredNonExistentFiles,
    ShredProgramFiles,
    ShredSystemFile,
    AppRuleTcpIpv4BlockedRemoteHostNotInList,
    CheckBannedComputerList,
    CheckIdsForTcpIpV4,
    CheckSilentDetectForTcpIpV4,
    HighRestrictedGroupOutcomingIcmpIpv4Blocked,
    PriorityOfNetworkPackageRulesAllow,
    PriorityOfNetworkPackageRulesBlock,
    CheckLocalizationFullyTranslated,
    EnableProtection,
    InteractiveProtection,
    SomeComponentsAreDisabled,
    CreateFiles,
    DefaultRightForStartProcess,
    HipsObjectsProcessing,
    ProcessStartBlocked,
    ScanKlCategoriesCategorizedObject,
    ScanKlCategoriesUncategorizedObject,
    CheckRetrievePhishing,
    CheckRetrieveWmuf,
    CheckSendPhishing,
    CheckSendWmuf,
    CheckAdditionalFilesAndFoldersExists,
    CheckAdditionalRegistryKeysExists,
    CheckAvpDumps,
    CheckAvpProcesses,
    CheckComponentsStatus,
    CheckDownloaderFileSize,
    CheckFilesAndFoldersExists,
    CheckImportOfExportedSettings,
    CheckNdisFilter,
    CheckRegistryKeysExists,
    CheckStartAndStopProduct,
    CheckTraceWriting,
    UninstallProductWithReboot,
    ImportMaxSettingsFromOlderVersionsKts,
    ImportMinSettingsFromOlderVersionsKts,
    ImportOffSettingsFromOlderVersionsKts,
    IpmWithActivation,
    UpdateFromLocalFolder,
    KsnOdsEicarSmoke,
    ActivateCommercialSmoke,
    ActivateTrialSmoke,
    ActivateCommercial,
    RepeatActualTrialActivation,
    DetectAllTypesOfBodyEicar,
    DetectAllTypesOfEicar,
    ChangeStateFileAntivirusMock,
    SendInfoApplicationControlMock,
    ActionNoSuspicious,
    DetectWithUnpackingLargeCompound,
    DetectWithoutUnpackingLargeCompound,
    InteractiveActionMixed,
    ScanByFormat,
    ScanFilesByExtension,
    ScanEmailObjectsHeuristic,
    ScanEmailObjectsSignature,
    ScanVulnerabilityAllDetection,
    ScanVulnerabilityClear,
    ScanVulnerabilityPartialDetection,
    VerifyDetection,
    BadWordsInMetaDescriptionViaInternetExplorer,
    EnableParentalControl,
    StartApplicationFromWhiteList,
    StartBlockedApplication,
    ScreenshotCreateDcUnderSafeBrowser,
    ScreenshotCreateDcUnderUnsafeBrowser,
    ScreenshotKeyboardEventUnderSafeBrowser,
    ScreenshotKeyboardEventUnderUnsafeBrowser,
    StartSafeBankingFirefox,
    StartSafeBrowsingFromProduct,
    CaptureMetadata,
    CaptureScreenshot,
    SelfDefenceDisabledMoveFiles,
    SelfDefenceEnabledKillGuiService,
    SelfDefenceEnabledMoveFiles,
    SystemRestart,
    ProductDisablesPupInCheckboxWhenSccEnabledX86,
    ProductShowsAlertWhenUserTryingToInstallPupX86,
    BssStabilityTestMock,
    ExactBssDetectAutoActionNoRollback,
    ProcessLaunchingDetectWithOnlySw,
    RunUtilityFromUntrustedSourceMock,
    WhitelistDetectAutoActionMock,
    DistinguishModulesLoads,
    InventoryOfDifferentFileFormats,
    CheckDetectedThreatsActions,
    IgnoreDetectedThreats,
    RestoreSuspiciousArchivesFromQuarantine,
    RestoreUncurableArchivesFromQuarantine,
    CommercialLicenseChange,
    ManagementConsole,
    AntiPhishingSearchByLinkSmoke,
    CheckIconOnExternalUrl,
    HttpDetectEicarFileLessThan1MbBlock,
    WmufSearchByHashSmoke;

scenario SmokeTests_SAAS =
    TryDisinfectWithoutRestart,
    CheckBlockBannerByUrl,
    TrafficMonitorEnableDisableEicarSpamTest,
    DetectAndDeleteThreatsFromVault,
    VaultCreationAndPasswordChanging,
    ShredFileQuick,
    CheckIdsForTcpIpV4,
    PriorityOfNetworkPackageRulesAllow,
    PriorityOfNetworkPackageRulesBlock,
    CheckLocalizationFullyTranslated,
    InteractiveProtection,
    CreateFiles,
    DefaultRightForStartProcess,
    HipsObjectsProcessing,
    ProcessStartBlocked,
    CheckAdditionalFilesAndFoldersExists,
    CheckAdditionalRegistryKeysExists,
    CheckAvpDumps,
    CheckAvpProcesses,
    CheckComponentsStatus,
    CheckDownloaderFileSize,
    CheckFilesAndFoldersExists,
    CheckInstallationGui,
    CheckNdisFilter,
    CheckRegistryKeysExists,
    CheckStartAndStopProduct,
    CheckTraceWriting,
    UninstallProductWithReboot,
    KsnOdsEicarSmoke,
    DetectAllTypesOfEicar,
    ScanByFormat,
    VerifyDetection,
    ScreenshotKeyboardEventUnderSafeBrowser,
    StartSafeBankingFirefox,
    StartSafeBrowsingFromProduct,
    CaptureMetadata,
    CaptureScreenshot,
    SelfDefenceDisabledMoveFiles,
    SelfDefenceEnabledKillGuiService,
    SelfDefenceEnabledMoveFiles,
    SystemRestart,
    ExactBssDetectAutoActionNoRollback,
    WhitelistDetectAutoActionMock,
    AntiPhishingSearchByHashBvt,
    AntiPhishingSearchByLinkBvt,
    AntiPhishingSearchByLinkSmoke,
    CheckIconOnExternalUrl,
    FtpDetectEicarFileLessThan1MbBlock,
    HttpDetectEicarFileLessThan1MbBlock,
    WmufSearchByHashSmoke;

scenario SmokeTests_KIS =
    TryDisinfectWithoutRestart,
    CheckBlockBannerByUrl,
    TrafficMonitorEnableDisableEicarSpamTest,
    CheckIdsForTcpIpV4,
    PriorityOfNetworkPackageRulesAllow,
    PriorityOfNetworkPackageRulesBlock,
    CheckLocalizationFullyTranslated,
    InteractiveProtection,
    CreateFiles,
    DefaultRightForStartProcess,
    HipsObjectsProcessing,
    ProcessStartBlocked,
    CheckAdditionalFilesAndFoldersExists,
    CheckAdditionalRegistryKeysExists,
    CheckAvpDumps,
    CheckAvpProcesses,
    CheckComponentsStatus,
    CheckDownloaderFileSize,
    CheckFilesAndFoldersExists,
    CheckInstallationGui,
    CheckNdisFilter,
    CheckRegistryKeysExists,
    CheckStartAndStopProduct,
    CheckTraceWriting,
    UninstallProductWithReboot,
    KsnOdsEicarSmoke,
    ActivateCommercialSmoke,
    ActivateTrialSmoke,
    DetectAllTypesOfEicar,
    ScanByFormat,
    VerifyDetection,
    EnableParentalControl,
    ScreenshotKeyboardEventUnderSafeBrowser,
    StartSafeBankingFirefox,
    StartSafeBrowsingFromProduct,
    CaptureMetadata,
    CaptureScreenshot,
    SelfDefenceDisabledMoveFiles,
    SelfDefenceEnabledKillGuiService,
    SelfDefenceEnabledMoveFiles,
    SystemRestart,
    ProductDisablesPupInCheckboxWhenSccEnabledX86,
    ProductShowsAlertWhenUserTryingToInstallPupX86,
    ExactBssDetectAutoActionNoRollback,
    WhitelistDetectAutoActionMock,
    RunSmokeVisualTests,
    AntiPhishingSearchByLinkSmoke,
    CheckIconOnExternalUrl,
    HttpDetectEicarFileLessThan1MbBlock,
    WmufSearchByHashSmoke;

scenario SmokeTests_KSOS =
    TryDisinfectWithoutRestart,
    CheckBlockBannerByUrl,
    TrafficMonitorEnableDisableEicarSpamTest,
    DetectAndDeleteThreatsFromVault,
    VaultCreationAndPasswordChanging,
    ShredFileQuick,
    CheckIdsForTcpIpV4,
    PriorityOfNetworkPackageRulesAllow,
    PriorityOfNetworkPackageRulesBlock,
    CheckLocalizationFullyTranslated,
    InteractiveProtection,
    CreateFiles,
    DefaultRightForStartProcess,
    HipsObjectsProcessing,
    ProcessStartBlocked,
    CheckAdditionalFilesAndFoldersExists,
    CheckAdditionalRegistryKeysExists,
    CheckAvpDumps,
    CheckAvpProcesses,
    CheckComponentsStatus,
    CheckDownloaderFileSize,
    CheckFilesAndFoldersExists,
    CheckInstallationGui,
    CheckNdisFilter,
    CheckRegistryKeysExists,
    CheckStartAndStopProduct,
    CheckTraceWriting,
    UninstallProductWithReboot,
    KsnOdsEicarSmoke,
    ActivateCommercialSmoke,
    ActivateTrialSmoke,
    DetectAllTypesOfEicar,
    ScanByFormat,
    VerifyDetection,
    EnableParentalControl,
    ScreenshotKeyboardEventUnderSafeBrowser,
    StartSafeBrowsingFromProduct,
    CaptureMetadata,
    CaptureScreenshot,
    SelfDefenceDisabledMoveFiles,
    SelfDefenceEnabledKillGuiService,
    SelfDefenceEnabledMoveFiles,
    SystemRestart,
    ProductDisablesPupInCheckboxWhenSccEnabledX86,
    ProductShowsAlertWhenUserTryingToInstallPupX86,
    ExactBssDetectAutoActionNoRollback,
    WhitelistDetectAutoActionMock,
    AntiPhishingSearchByLinkSmoke,
    CheckIconOnExternalUrl,
    HttpDetectEicarFileLessThan1MbBlock,
    WmufSearchByHashSmoke;

scenario SmokeTests_KSOS_FS =
    TryDisinfectWithoutRestart,
    DetectAndDeleteThreatsFromVault,
    VaultCreationAndPasswordChanging,
    ShredFileQuick,
    CheckIdsForTcpIpV4,
    PriorityOfNetworkPackageRulesAllow,
    PriorityOfNetworkPackageRulesBlock,
    CheckLocalizationFullyTranslated,
    InteractiveProtection,
    CreateFiles,
    DefaultRightForStartProcess,
    HipsObjectsProcessing,
    ProcessStartBlocked,
    CheckAdditionalFilesAndFoldersExists,
    CheckAdditionalRegistryKeysExists,
    CheckAvpDumps,
    CheckAvpProcesses,
    CheckComponentsStatus,
    CheckDownloaderFileSize,
    CheckFilesAndFoldersExists,
    CheckInstallationGui,
    CheckNdisFilter,
    CheckRegistryKeysExists,
    CheckStartAndStopProduct,
    CheckTraceWriting,
    UninstallProductWithReboot,
    KsnOdsEicarSmoke,
    ActivateCommercialSmoke,
    ActivateTrialSmoke,
    ScanByFormat,
    VerifyDetection,
    CaptureMetadata,
    CaptureScreenshot,
    SelfDefenceDisabledMoveFiles,
    SelfDefenceEnabledKillGuiService,
    SelfDefenceEnabledMoveFiles,
    SystemRestart,
    ExactBssDetectAutoActionNoRollback,
    WhitelistDetectAutoActionMock,
    AntiPhishingSearchByLinkSmoke,
    HttpDetectEicarFileLessThan1MbBlock,
    WmufSearchByHashSmoke;

scenario SmokeTests_KAV =
    TryDisinfectWithoutRestart,
    CheckIdsForTcpIpV4,
    CheckLocalizationFullyTranslated,
    InteractiveProtection,
    CheckAdditionalFilesAndFoldersExists,
    CheckAdditionalRegistryKeysExists,
    CheckAvpDumps,
    CheckAvpProcesses,
    CheckComponentsStatus,
    CheckDownloaderFileSize,
    CheckFilesAndFoldersExists,
    CheckInstallationGui,
    CheckNdisFilter,
    CheckRegistryKeysExists,
    CheckStartAndStopProduct,
    CheckTraceWriting,
    UninstallProductWithReboot,
    KsnOdsEicarSmoke,
    ActivateCommercialSmoke,
    ActivateTrialSmoke,
    DetectAllTypesOfEicar,
    ScanByFormat,
    VerifyDetection,
    CaptureMetadata,
    CaptureScreenshot,
    SelfDefenceDisabledMoveFiles,
    SelfDefenceEnabledKillGuiService,
    SelfDefenceEnabledMoveFiles,
    SystemRestart,
    ExactBssDetectAutoActionNoRollback,
    AntiPhishingSearchByLinkSmoke,
    CheckIconOnExternalUrl,
    HttpDetectEicarFileLessThan1MbBlock,
    WmufSearchByHashSmoke;

scenario SmokeTests_KFA =
    TryDisinfectWithoutRestart,
    CheckIdsForTcpIpV4,
    CheckLocalizationFullyTranslated,
    InteractiveProtection,
    CheckAdditionalFilesAndFoldersExists,
    CheckAdditionalRegistryKeysExists,
    CheckAvpDumps,
    CheckAvpProcesses,
    CheckComponentsStatus,
    CheckDownloaderFileSize,
    CheckFilesAndFoldersExists,
    CheckInstallationGui,
    CheckNdisFilter,
    CheckRegistryKeysExists,
    CheckStartAndStopProduct,
    CheckTraceWriting,
    UninstallProductWithReboot,
    KsnOdsEicarSmoke,
    DetectAllTypesOfEicar,
    ScanByFormat,
    VerifyDetection,
    CaptureMetadata,
    CaptureScreenshot,
    SelfDefenceDisabledMoveFiles,
    SelfDefenceEnabledKillGuiService,
    SelfDefenceEnabledMoveFiles,
    SystemRestart,
    AntiPhishingSearchByLinkSmoke,
    CheckIconOnExternalUrl,
    HttpDetectEicarFileLessThan1MbBlock,
    WmufSearchByHashSmoke;

scenario SmokeTests_KSDE =
    ExitProductFromTray,
    OpenMainWindowFromTray,
    CheckDownloaderFileSize_KSDE,
    CheckDumps,
    CheckInstallationGui_KSDE,
    CheckProcess,
    CheckProductFilesAndFolders,
    CheckProductRegistry,
    CheckServiceState,
    CheckShortcuts,
    CheckSilentMode,
    CheckStartStopProcess,
    CheckTraces,
    UninstallProductWithReboot_KSDE,
    UpdateFromLocalFolder_KSDE,
    RunSmokeVisualTests_KSDE;

