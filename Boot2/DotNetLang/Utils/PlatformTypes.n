using Nitra.Declarations;

using Nemerle;
using Nemerle.Collections;
using Nemerle.Imperative;
using Nemerle.Text;
using Nemerle.Utility;

using System;
using System.Collections.Generic;
using System.Linq;

namespace DotNet
{
  public module PlatformTypes
  {
    // TODO: must be contextual! Should not be global!

    public GetFreeVar() : TypeSymbol { Object }  // TODO: must generate free type var

    public Void    : TypeSymbol { get; set; }
    public Object  : TypeSymbol { get; set; }
    public Type    : TypeSymbol { get; set; }
    public String  : TypeSymbol { get; set; }
    public Char    : TypeSymbol { get; set; }
    public Byte    : TypeSymbol { get; set; }
    public SByte   : TypeSymbol { get; set; }
    public Int16   : TypeSymbol { get; set; }
    public Int32   : TypeSymbol { get; set; }
    public Int64   : TypeSymbol { get; set; }
    public UInt16  : TypeSymbol { get; set; }
    public UInt32  : TypeSymbol { get; set; }
    public UInt64  : TypeSymbol { get; set; }
    public Single  : TypeSymbol { get; set; }
    public Double  : TypeSymbol { get; set; }
    public Decimal : TypeSymbol { get; set; }
    public Boolean : TypeSymbol { get; set; }
  }
}
