using Nemerle;
using Nemerle.Collections;
using Nemerle.Text;
using Nemerle.Utility;

using System;
using System.Collections.Generic;
using System.Linq;

namespace Nitra.ProjectSystem
{
  public sealed class FakeRootCompilerMessages : IRootCompilerMessages
  {
    private _compilerMessages : ICompilerMessages;

    public this(compilerMessages : ICompilerMessages)
    {
      assert(compilerMessages != null);
      _compilerMessages = compilerMessages;
    }

    public ReportMessage(messageType : CompilerMessageType, loc : Location, msg : string, num : int) : void
    {
      _compilerMessages.ReportMessage(messageType, loc, msg, num)
    }

    public ReportRootMessage(messageType : CompilerMessageType, loc : Location, msg : string, num : int) : IRootCompilerMessages
    {
      _compilerMessages.ReportRootMessage(messageType, loc, msg, num)
    }

    public SetFutureMessagesKind(kind : Guid) : void { _compilerMessages.SetFutureMessagesKind(kind); }
    public Remove(predicate : Func[Guid, Location, bool]) : void { _compilerMessages.Remove(predicate); }

    public Dispose() : void { }
  }
}
