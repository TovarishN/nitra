using Nitra.Serialization2;
using System.IO;

namespace Nitra.Declarations
{
  public sealed class StaticScope : TableScope
  {
    private static _instance : StaticScope = StaticScope();

    private this()
    {
      base("Static scope")
    }

    public override Serialize(writer : BinaryWriter, metadataWriter : MetadataWriter) : void
    {
      IgnoreParams();
    }

    public static new Deserialize(reader : BinaryReader, metadataReader : MetadataReader) : this
    {
      IgnoreParams();
      _instance
    }

    public static CreateSymbol[TSymbol](nameStr : string) : TSymbol
      where TSymbol : DeclarationSymbol
    {
      def name = Name(Location.Default, nameStr);
      def decl = ExternalDeclaration.[TSymbol](name);
      decl.DefineSymbol(_instance)
    }
  }
}
